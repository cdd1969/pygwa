pos: (0.0, 0.0)
connects: [(u'datetime2sec.0', 'Out', 'PlotCurve.2', 'x'), ('df2recArray.0', 'Out', 'ColSel', 'In'), (u'datetime2sec.0', 'Out', 'PlotCurve.1', 'x'), ('Input', 'dataIn', 'GaussianFilter.0', 'In'), (u'makeTimeseriesCurve.0', 'pd.Series', u'PythonEval.0', 'input'), ('ColSel', 'Datetime', u'datetime2sec.0', 'In'), ('ColSel', 'GW_1', 'PlotCurve.3', 'y'), ('readCSV.1', 'output', 'QuickView.0', 'In'), ('ColSel', 'GW_6', 'PlotCurve.2', 'y'), ('GaussianFilter.0', 'Out', 'Output', 'dataOut'), ('readCSV.1', 'output', 'df2recArray.0', 'In'), ('ColSel', 'W_1', 'PlotCurve.1', 'y'), ('PlotCurve.3', 'plot', 'TimeseriesPlot.0', 'Array'), (u'datetime2sec.0', 'Out', 'PlotCurve.3', 'x'), ('PlotCurve.2', 'plot', 'TimeseriesPlot.0', 'Array'), (u'makeTimeseriesCurve.0', 'pd.Series', u'QuickView.1', 'In'), ('readCSV.1', 'output', u'makeTimeseriesCurve.0', 'df'), ('PlotCurve.1', 'plot', 'TimeseriesPlot.0', 'Array'), ('Input', 'dataIn', 'PlotWidget.0', 'In'), (u'makeTimeseriesCurve.0', 'Curve', 'TimeseriesPlot.0', 'Array')]
terminals:
    dataOut:
        multi: False
        io: 'out'
        renamable: False
        multiable: False
        removable: False
        optional: False
    dataIn:
        multi: False
        io: 'in'
        renamable: False
        multiable: False
        removable: False
        optional: False
bypass: False
inputNode:
    terminals:
        dataIn:
            multi: False
            io: 'out'
            renamable: False
            multiable: False
            removable: False
            optional: False
    pos: (261.0296991500918, 292.24218190027244)
    bypass: False
nodes: [{'state': {'pos': (195.95415141162454, 284.66284251503623), 'bypass': False, 'ctrl': {'sigma': 5.0}}, 'pos': (195.95415141162454, 284.66284251503623), 'class': 'GaussianFilter', 'name': 'GaussianFilter.0'}, {'state': {'pos': (30.113247644754836, 282.5950146535861), 'bypass': False}, 'pos': (30.113247644754836, 282.5950146535861), 'class': 'PlotWidget', 'name': 'PlotWidget.0'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('Help', {'expanded': True, 'name': 'Help', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'}), ('dtype', {'expanded': True, 'name': 'dtype', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': 'datetime64[ns]', 'visible': True, 'readonly': True, 'tip': 'data-type of the received object', 'removable': False, 'type': 'str'}), ('tz correct', {'expanded': True, 'name': 'tz correct', 'strictNaming': False, 'default': 0, 'enabled': True, 'title': None, 'renamable': False, 'value': 1.0, 'visible': True, 'readonly': False, 'tip': '<float>\nTimezone correction\nNumber of hours to add/substract from result. Due to missing\ntimezone settings it may be nessesary to use this parameter. Check the results manually on plot', 'removable': False, 'type': 'float', 'suffix': ' hours'})])}, 'pos': (66.15963913385929, -529.9686976244286), 'bypass': False}, 'pos': (66.15963913385929, -529.9686976244286), 'class': 'datetime2sec', 'name': u'datetime2sec.0'}, {'state': {'pos': (-110.5724607973526, -109.23753346156914), 'bypass': False}, 'pos': (-110.5724607973526, -109.23753346156914), 'class': 'QuickView', 'name': u'QuickView.1'}, {'state': {'pos': (-578.6502061390769, -407.36504669892724), 'bypass': False}, 'pos': (-578.6502061390769, -407.36504669892724), 'class': 'QuickView', 'name': 'QuickView.0'}, {'state': {'columns': ['GW_6', 'W_1', 'GW_1', 'Datetime'], 'pos': (-120.49860346013674, -533.552577984229), 'bypass': False}, 'pos': (-120.49860346013674, -533.552577984229), 'class': 'ColumnSelect', 'name': 'ColSel'}, {'state': {'text': "import matplotlib.pyplot as plt\n\nargs['input'].unpack().plot()\nplt.show()\nreturn {'output': None}", 'terminals': OrderedDict([('input', {'multi': False, 'io': 'in', 'renamable': True, 'multiable': True, 'removable': False, 'optional': False}), ('output', {'multi': False, 'io': 'out', 'renamable': True, 'multiable': True, 'removable': False, 'optional': False})]), 'pos': (67.93273703708556, -135.0742698916698), 'bypass': False}, 'pos': (67.93273703708556, -135.0742698916698), 'class': 'PythonEval', 'name': u'PythonEval.0'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('Help', {'expanded': True, 'name': 'Help', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'}), ('Y:signal', {'expanded': True, 'name': 'Y:signal', 'limits': ['GW_1', 'GW_2', 'GW_3', 'GW_4', 'GW_5', 'GW_6', 'W_1', 'Unnamed: 8'], 'strictNaming': False, 'default': None, 'tip': 'Signal Data-Values (Y-axis)', 'title': None, 'renamable': False, 'value': 'GW_1', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('X:datetime', {'expanded': True, 'name': 'X:datetime', 'limits': [None, 'Datetime'], 'strictNaming': False, 'default': None, 'tip': 'Datetime Values (X-axis)', 'title': None, 'renamable': False, 'value': 'Datetime', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('tz correct', {'expanded': True, 'name': 'tz correct', 'strictNaming': False, 'default': 0, 'enabled': True, 'title': None, 'renamable': False, 'value': 1.0, 'visible': True, 'readonly': False, 'tip': '<float>\nONLY FOR CURVE!!!\nTimezone correction\nNumber of hours to add/substract from result. Due to missing\ntimezone settings it may be nessesary to use this parameter.\nCheck the results manually with *TimeseriesPlot* Node', 'removable': False, 'type': 'float', 'suffix': ' hours'}), ('color', {'expanded': True, 'name': 'color', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': (255, 0, 127, 255), 'visible': True, 'readonly': False, 'tip': 'Curve color', 'removable': False, 'type': 'color'})])}, 'pos': (-113.62543042455195, -229.52820871189857), 'bypass': False}, 'pos': (-113.62543042455195, -229.52820871189857), 'class': 'makeTimeseriesCurve', 'name': u'makeTimeseriesCurve.0'}, {'state': {'pos': (282.9470906315977, -391.93718734212484), 'bypass': False, 'ctrl': {'color': (0, 0, 255, 255)}}, 'pos': (282.9470906315977, -391.93718734212484), 'class': 'PlotCurve', 'name': 'PlotCurve.3'}, {'state': {'pos': (-234.51070942045203, -533.1530997533812), 'bypass': False}, 'pos': (-234.51070942045203, -533.1530997533812), 'class': 'df2recArray', 'name': 'df2recArray.0'}, {'state': {'pos': (504.08496925011946, -279.11498005663435), 'bypass': False}, 'pos': (504.08496925011946, -279.11498005663435), 'class': 'TimeseriesPlot', 'name': 'TimeseriesPlot.0'}, {'state': {'pos': (284.03567142559825, -524.690872450351), 'bypass': False, 'ctrl': {'color': (255, 255, 0, 255)}}, 'pos': (284.03567142559825, -524.690872450351), 'class': 'PlotCurve', 'name': 'PlotCurve.1'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('Help', {'expanded': True, 'name': 'Help', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'}), ('Load state', {'expanded': True, 'name': 'Load state', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'}), ('Select File', {'expanded': True, 'name': 'Select File', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'/home/nck/prj/master_thesis/TESTDATA.all', 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'}), ('Load CSV parameters', {'expanded': True, 'name': 'Load CSV parameters', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('decimal', {'expanded': True, 'name': 'decimal', 'strictNaming': False, 'default': '.', 'enabled': True, 'title': None, 'renamable': False, 'value': '.', 'visible': True, 'readonly': False, 'tip': '<str>\nCharacter to recognize as decimal point. E.g. use ","" for European data', 'removable': False, 'type': 'str'}), ('delimiter', {'expanded': True, 'name': 'delimiter', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': ';', 'visible': True, 'readonly': False, 'tip': '<str>\nDelimiter to use. If sep is None, will try to automatically determine this. Regular expressions are accepted', 'removable': False, 'type': 'str'}), ('header', {'expanded': True, 'name': 'header', 'strictNaming': False, 'default': 0, 'enabled': True, 'title': None, 'renamable': False, 'value': 0, 'visible': True, 'readonly': False, 'tip': '< int, list of ints, default \xe2\x80\x98infer\xe2\x80\x99>\nRow number(s) to use as the column names, and the start of the data.\nREAD HELP', 'removable': False, 'type': 'str'}), ('skiprows', {'expanded': True, 'name': 'skiprows', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'1', 'visible': True, 'readonly': False, 'tip': '<list-like or integer, default None>\nLine numbers to skip (0-indexed) or number of lines to skip (int) at the start of the file', 'removable': False, 'type': 'str'}), ('parse_dates', {'expanded': True, 'name': 'parse_dates', 'strictNaming': False, 'default': False, 'enabled': True, 'title': None, 'renamable': False, 'value': u'[0]', 'visible': True, 'readonly': False, 'tip': '<boolean, list of ints or names, list of lists, or dict, default False>\nIf True -> try parsing the index. If [1, 2, 3] -> try parsing columns 1, 2, 3 each as a\nseparate date column. If [[1, 3]] -> combine columns 1 and 3 and parse as a single\ndate column. {\xe2\x80\x98foo\xe2\x80\x99 : [1, 3]} -> parse columns 1, 3 as date and call result \xe2\x80\x98foo\xe2\x80\x99 A fast-\npath exists for iso8601-formatted dates.', 'removable': False, 'type': 'str'}), ('date_parser', {'expanded': True, 'name': 'date_parser', 'strictNaming': False, 'default': '%d.%m.%Y %H:%M:%S', 'enabled': True, 'title': None, 'renamable': False, 'value': u"lambda x: datetime.strptime(x, '%d.%m.%Y %H:%M')", 'visible': True, 'readonly': False, 'tip': '<str>\nDatetime format of the data in CSV file.\nREAD HELP', 'removable': False, 'type': 'str'}), ('nrows', {'expanded': True, 'name': 'nrows', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': '<int, default None>\nNumber of rows of file to read. Useful for reading pieces of large files', 'removable': False, 'type': 'str'}), ('Advanced parameters', {'expanded': False, 'name': 'Advanced parameters', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('prefix', {'expanded': True, 'name': 'prefix', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'removable': False, 'type': 'str'}), ('converters', {'expanded': True, 'name': 'converters', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'removable': False, 'type': 'str'}), ('thousands', {'expanded': True, 'name': 'thousands', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'removable': False, 'type': 'str'}), ('skipfooter', {'expanded': True, 'name': 'skipfooter', 'limits': (0, 10000000), 'strictNaming': False, 'default': 0, 'enabled': True, 'title': None, 'renamable': False, 'value': 0, 'visible': True, 'readonly': False, 'removable': False, 'type': 'int'}), ('comment', {'expanded': True, 'name': 'comment', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'removable': False, 'type': 'str'}), ('na_values', {'expanded': True, 'name': 'na_values', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'---', 'visible': True, 'readonly': False, 'removable': False, 'type': 'str'}), ('keep_default_na', {'expanded': True, 'name': 'keep_default_na', 'strictNaming': False, 'default': True, 'enabled': True, 'title': None, 'renamable': False, 'value': True, 'visible': True, 'readonly': False, 'removable': False, 'type': 'bool'}), ('names', {'expanded': True, 'name': 'names', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'removable': False, 'type': 'str'}), ('index_col', {'expanded': True, 'name': 'index_col', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'removable': False, 'type': 'str'}), ('usecols', {'expanded': True, 'name': 'usecols', 'strictNaming': False, 'default': None, 'enabled': False, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'removable': False, 'type': 'str'}), ('skipinitialspace', {'expanded': True, 'name': 'skipinitialspace', 'strictNaming': False, 'default': False, 'enabled': True, 'title': None, 'renamable': False, 'value': False, 'visible': True, 'readonly': False, 'tip': 'My tooltip', 'removable': False, 'type': 'bool'}), ('Manually set parameters', {'expanded': False, 'name': 'Manually set parameters', 'strictNaming': False, 'default': False, 'enabled': True, 'title': None, 'renamable': False, 'value': False, 'visible': True, 'readonly': False, 'tip': 'Ignore all setting before (except File selection) and read\nparameter dictionary from the text-field below.\nREAD HELP', 'removable': False, 'type': 'bool', 'children': OrderedDict([('Manuall parameters', {'expanded': True, 'name': 'Manuall parameters', 'strictNaming': False, 'default': '#Pass here manually params. For Example:\n#{"decimal": ".", "skiprows": 2, skip_blank_lines": True}', 'enabled': True, 'title': None, 'renamable': False, 'value': '#Pass here manually params. For Example:\n#{"decimal": ".", "skiprows": 2, skip_blank_lines": True}', 'visible': True, 'readonly': False, 'removable': False, 'type': 'text'})])})])})])}), ('Load File', {'expanded': True, 'name': 'Load File', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'})])}, 'pos': (-574.1073694895815, -299.3476455538533), 'bypass': False}, 'pos': (-574.1073694895815, -299.3476455538533), 'class': 'readCSV', 'name': 'readCSV.1'}, {'state': {'pos': (286.13840097466084, -638.700321949907), 'bypass': False, 'ctrl': {'color': (255, 0, 0, 255)}}, 'pos': (286.13840097466084, -638.700321949907), 'class': 'PlotCurve', 'name': 'PlotCurve.2'}]
outputNode:
    terminals:
        dataOut:
            multi: False
            io: 'in'
            renamable: False
            multiable: False
            removable: False
            optional: False
    pos: (116.90742824277936, 269.6106379607305)
    bypass: False
