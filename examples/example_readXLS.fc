pos: (0.0, 0.0)
connects: [(u'readXLS.0', 'output', u'viewPandasDf.0', 'In'), (u'readXLS.0', 'output', u'toXLS.0', 'In'), (u'readXLS.0', 'output', u'plotGWLvsWL.0', 'In'), (u'readXLS.0', 'output', u'scatterPlotWidget.0', 'In')]
terminals:
    dataOut:
        multi: False
        io: 'out'
        renamable: False
        multiable: False
        removable: False
        optional: False
    dataIn:
        multi: False
        io: 'in'
        renamable: False
        multiable: False
        removable: False
        optional: False
bypass: False
inputNode:
    terminals:
        dataIn:
            multi: False
            io: 'out'
            renamable: False
            multiable: False
            removable: False
            optional: False
    pos: (599.2551016096791, 333.36038828991445)
    bypass: False
nodes: [{'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('Help', {'expanded': True, 'name': 'Help', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'}), ('Select File', {'expanded': True, 'name': 'Select File', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'/home/nck/prj/FARGE_project_work/data/SLICED_171020141500_130420150600/output_tidal_efficiency_with_E.xls', 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'}), ('Parameters', {'expanded': True, 'name': 'Parameters', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('sheetname', {'expanded': True, 'name': 'sheetname', 'strictNaming': False, 'default': 0, 'enabled': True, 'title': None, 'renamable': False, 'value': 0, 'visible': True, 'readonly': False, 'tip': '<string, int, mixed list of strings/ints, or None, default 0>\nStrings are used for sheet names, Integers are used in zero-indexed sheet positions.\nLists of strings/integers are used to request multiple sheets.\nSpecify `None` to get all sheets.\nstr|int -> DataFrame is returned. list|None -> Dict of DataFrames is returned, with \nkeys representing sheets.\nAvailable Cases\n - Defaults to 0 -> 1st sheet as a DataFrame\n - 1 -> 2nd sheet as a DataFrame\n - "Sheet1" -> 1st sheet as a DataFrame\n - [0,1,"Sheet5"] -> 1st, 2nd & 5th sheet as a dictionary of DataFrames\n - None -> All sheets as a dictionary of DataFrames', 'removable': False, 'type': 'str'}), ('header', {'expanded': True, 'name': 'header', 'strictNaming': False, 'default': 0, 'enabled': True, 'title': None, 'renamable': False, 'value': 0, 'visible': True, 'readonly': False, 'tip': '<int, list of ints, default 0>\nRow (0-indexed) to use for the column labels of the parsed DataFrame. If a list of \nintegers is passed those row positions will be combined into a MultiIndex', 'removable': False, 'type': 'str'}), ('skiprows', {'expanded': True, 'name': 'skiprows', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': '<list-like or integer, default None>\nRows to skip at the beginning (0-indexed)', 'removable': False, 'type': 'str'}), ('index_col', {'expanded': True, 'name': 'index_col', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': '<int, list of ints, default None>\nColumn (0-indexed) to use as the row labels of the DataFrame. Pass None if there is \nno such column. If a list is passed, those columns will be combined into a\nMultiIndex', 'removable': False, 'type': 'str'}), ('converters', {'expanded': False, 'name': 'converters', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': '', 'visible': True, 'readonly': False, 'tip': '<dict, default None>\nDict of functions for converting values in certain columns. Keys can either be \nintegers or column labels, values are functions that take one input argument, the \nExcel cell content, and return the transformed content.', 'removable': False, 'type': 'text'}), ('parse_cols', {'expanded': True, 'name': 'parse_cols', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'4', 'visible': True, 'readonly': False, 'tip': '< int or list, default None>\n - If None then parse all columns,\n - If int then indicates last column to be parsed\n - If list of ints then indicates list of column numbers to be parsed\n - If string then indicates comma separated list of column names and column ranges \n   (e.g. \xe2\x80\x9cA:E\xe2\x80\x9d or \xe2\x80\x9cA,C,E:F\xe2\x80\x9d)', 'removable': False, 'type': 'str'}), ('na_values', {'expanded': True, 'name': 'na_values', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': '< list-like, default None>\n List of additional strings to recognize as NA/NaN', 'removable': False, 'type': 'str'}), ('keep_default_na', {'expanded': True, 'name': 'keep_default_na', 'strictNaming': False, 'default': True, 'enabled': True, 'title': None, 'renamable': False, 'value': True, 'visible': True, 'readonly': False, 'tip': '<bool, default True>\nIf na_values are specified and keep_default_na is False the default NaN values are \noverridden, otherwise they\xe2\x80\x99re appended to', 'removable': False, 'type': 'bool'}), ('thousands', {'expanded': True, 'name': 'thousands', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': '<str, default None>\nThousands separator for parsing string columns to numeric. Note that this parameter \nis only necessary for columns stored as TEXT in Excel, any numeric columns will \nautomatically be parsed, regardless of display format.', 'removable': False, 'type': 'str'}), ('Additional parameters', {'expanded': False, 'name': 'Additional parameters', 'strictNaming': False, 'default': '#Pass here manually params. For Example:\n#{"verbose": False, "engine": None, "convert_float": True}', 'enabled': True, 'title': None, 'renamable': False, 'value': '#Pass here manually params. For Example:\n#{"verbose": False, "engine": None, "convert_float": True}', 'visible': True, 'readonly': False, 'removable': False, 'type': 'text'})])}), ('Load File', {'expanded': True, 'name': 'Load File', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'})])}, 'pos': (-336.5586065273119, 8.795466926762785), 'bypass': False}, 'pos': (-336.5586065273119, 8.795466926762785), 'class': 'readXLS', 'name': u'readXLS.0'}, {'state': {'pos': (-337.90481219315626, -112.91993185659969), 'bypass': False}, 'pos': (-337.90481219315626, -112.91993185659969), 'class': 'viewPandasDf', 'name': u'viewPandasDf.0'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('Help', {'expanded': True, 'name': 'Help', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'}), ('Parameters', {'expanded': True, 'name': 'Parameters', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('sheet_name', {'expanded': True, 'name': 'sheet_name', 'strictNaming': False, 'default': 'Sheet1', 'enabled': True, 'title': None, 'renamable': False, 'value': 'Sheet1', 'visible': True, 'readonly': False, 'tip': '<string, default "Sheet1">\nName of sheet which will contain DataFrame', 'removable': False, 'type': 'str'}), ('na_rep', {'expanded': True, 'name': 'na_rep', 'strictNaming': False, 'default': '', 'enabled': True, 'title': None, 'renamable': False, 'value': '', 'visible': True, 'readonly': False, 'tip': '<string, default "">\nMissing data representation', 'removable': False, 'type': 'str'}), ('Additional parameters', {'expanded': False, 'name': 'Additional parameters', 'strictNaming': False, 'default': '#Pass here manually params. For Example:\n#{"float_format": None, "columns": None, "header": True, etc...}\n{}', 'enabled': True, 'title': None, 'renamable': False, 'value': '#Pass here manually params. For Example:\n#{"float_format": None, "columns": None, "header": True, etc...}\n{}', 'visible': True, 'readonly': False, 'removable': False, 'type': 'text'})])}), ('Copy to\nclipboard', {'expanded': True, 'name': 'Copy to\nclipboard', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'tip': 'Copy current DataFrame to clipboard, so it can be pasted\nwith CTRL+V into Excel or text-editor', 'removable': False, 'type': 'action'}), ('Save file', {'expanded': True, 'name': 'Save file', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'tip': 'Generate Excel file', 'removable': False, 'type': 'action'})])}, 'pos': (20.031276913747547, 73.0911247399722), 'bypass': False}, 'pos': (20.031276913747547, 73.0911247399722), 'class': 'toXLS', 'name': u'toXLS.0'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('Help', {'expanded': True, 'name': 'Help', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'}), ('X: River WL', {'expanded': True, 'name': 'X: River WL', 'limits': [u'Datetime High Tide', u'Datetime Low Tide', u'High Tide [m AMSL]', u'Low Tide [m AMSL]', u'Amplitude_W [m]'], 'strictNaming': False, 'default': None, 'tip': 'Name of the column with river waterlevel data.\nWill be plotted on X-axis', 'title': None, 'renamable': False, 'value': u'High Tide [m AMSL]', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('Y: Well GWL', {'expanded': True, 'name': 'Y: Well GWL', 'limits': [u'Datetime High Tide', u'Datetime Low Tide', u'High Tide [m AMSL]', u'Low Tide [m AMSL]', u'Amplitude_W [m]'], 'strictNaming': False, 'default': None, 'tip': 'Name of the column with well groundwater-level\ndata. It will be plotted on Y-axis', 'title': None, 'renamable': False, 'value': u'Datetime High Tide', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('plot overheads', {'expanded': True, 'name': 'plot overheads', 'strictNaming': False, 'default': True, 'enabled': True, 'title': None, 'renamable': False, 'value': True, 'visible': True, 'readonly': False, 'tip': 'If checked, will substract X-values from Y-values first (element-wise).\nThis means that so called "overheads" will be plotted on Y-axis and not the\nactual groundwater-levels.\nIf not checked - plots real values of Y-column', 'removable': False, 'type': 'bool'}), ('Plot parameters', {'expanded': False, 'name': 'Plot parameters', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('trendlinemode', {'expanded': True, 'name': 'trendlinemode', 'limits': [1, 3, 'None'], 'strictNaming': False, 'default': 'None', 'tip': '1    - draw trendlines using all data points\n3    - draw trendlines using all data points, and shift them to the most-far-lying point\nNone - do not draw trendline', 'title': None, 'renamable': False, 'value': 3, 'visible': True, 'readonly': False, 'values': [1, 3, 'None'], 'removable': False, 'type': 'list', 'enabled': True}), ('title', {'expanded': True, 'name': 'title', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': 'Figure title (default None)', 'removable': False, 'type': 'str'}), ('xlabel', {'expanded': True, 'name': 'xlabel', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': 'None, or string for labeling x-axes', 'removable': False, 'type': 'str'}), ('ylabel', {'expanded': True, 'name': 'ylabel', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': 'None, or string for labeling y-axes', 'removable': False, 'type': 'str'}), ('legendlabels', {'expanded': True, 'name': 'legendlabels', 'strictNaming': False, 'default': [None], 'enabled': True, 'title': None, 'renamable': False, 'value': [None], 'visible': True, 'readonly': False, 'tip': 'List of legendnames or [None]. If default ([None]) - standart names are used', 'removable': False, 'type': 'str'}), ('xlim', {'expanded': True, 'name': 'xlim', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': 'None, or list for y-limits [ymin, ymax] of the plot. (i.e. ylim=[0., 1.])', 'removable': False, 'type': 'str'}), ('ylim', {'expanded': True, 'name': 'ylim', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': 'None, or list for x-limits [xmin, xmax] of the plot. (i.e. xlim=[-0.5, 0.5])', 'removable': False, 'type': 'str'}), ('axeslabel_fontsize', {'expanded': True, 'name': 'axeslabel_fontsize', 'strictNaming': False, 'default': 10.0, 'enabled': True, 'title': None, 'renamable': False, 'value': 10.0, 'visible': True, 'readonly': False, 'tip': '', 'removable': False, 'type': 'float'}), ('axesvalues_fontsize', {'expanded': True, 'name': 'axesvalues_fontsize', 'strictNaming': False, 'default': 10.0, 'enabled': True, 'title': None, 'renamable': False, 'value': 10.0, 'visible': True, 'readonly': False, 'tip': '', 'removable': False, 'type': 'float'}), ('title_fontsize', {'expanded': True, 'name': 'title_fontsize', 'strictNaming': False, 'default': 20.0, 'enabled': True, 'title': None, 'renamable': False, 'value': 20.0, 'visible': True, 'readonly': False, 'tip': '', 'removable': False, 'type': 'float'}), ('annotation_fontsize', {'expanded': True, 'name': 'annotation_fontsize', 'strictNaming': False, 'default': 10.0, 'enabled': True, 'title': None, 'renamable': False, 'value': 10.0, 'visible': True, 'readonly': False, 'tip': '', 'removable': False, 'type': 'float'}), ('legend_fontsize', {'expanded': True, 'name': 'legend_fontsize', 'strictNaming': False, 'default': 8.0, 'enabled': True, 'title': None, 'renamable': False, 'value': 8.0, 'visible': True, 'readonly': False, 'tip': '', 'removable': False, 'type': 'float'}), ('HYDR_VALS', {'expanded': False, 'name': 'HYDR_VALS', 'strictNaming': False, 'default': "#{'MThw':  2.28,\n# 'MTnw': -1.57,\n# 'NNTnw': -3.42,\n# 'HThw':  4.99,\n# 'MspTnw': -1.87}\nNone", 'enabled': True, 'title': None, 'renamable': False, 'value': "{'MThw':  2.28 }\n# 'MTnw': -1.57,\n# 'NNTnw': -3.42,\n# 'HThw':  4.99,\n# 'MspTnw': -1.87}\n#None", 'visible': True, 'readonly': False, 'tip': 'dictionary with special hydrological values (see code below)', 'removable': False, 'type': 'text'})])}), ('Plot', {'expanded': True, 'name': 'Plot', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'})])}, 'pos': (-54.891153392655525, -108.1105238738782), 'bypass': False}, 'pos': (-54.891153392655525, -108.1105238738782), 'class': 'plotGWLvsWL', 'name': u'plotGWLvsWL.0'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('Help', {'expanded': True, 'name': 'Help', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'}), ('Plot', {'expanded': True, 'name': 'Plot', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'}), (u'Datetime High Tide', {'expanded': False, 'name': u'Datetime High Tide', 'strictNaming': False, 'default': True, 'enabled': True, 'title': None, 'renamable': False, 'value': True, 'visible': True, 'readonly': False, 'removable': False, 'type': 'bool', 'children': OrderedDict([('name', {'expanded': True, 'name': 'name', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'Datetime High Tide', 'visible': True, 'readonly': True, 'tip': '', 'removable': False, 'type': 'str'}), ('units', {'expanded': True, 'name': 'units', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': '', 'removable': False, 'type': 'str'})])}), (u'Datetime Low Tide', {'expanded': False, 'name': u'Datetime Low Tide', 'strictNaming': False, 'default': True, 'enabled': True, 'title': None, 'renamable': False, 'value': True, 'visible': True, 'readonly': False, 'removable': False, 'type': 'bool', 'children': OrderedDict([('name', {'expanded': True, 'name': 'name', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'Datetime Low Tide', 'visible': True, 'readonly': True, 'tip': '', 'removable': False, 'type': 'str'}), ('units', {'expanded': True, 'name': 'units', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': '', 'removable': False, 'type': 'str'})])}), (u'High Tide [m AMSL]', {'expanded': False, 'name': u'High Tide [m AMSL]', 'strictNaming': False, 'default': True, 'enabled': True, 'title': None, 'renamable': False, 'value': True, 'visible': True, 'readonly': False, 'removable': False, 'type': 'bool', 'children': OrderedDict([('name', {'expanded': True, 'name': 'name', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'High Tide [m AMSL]', 'visible': True, 'readonly': True, 'tip': '', 'removable': False, 'type': 'str'}), ('units', {'expanded': True, 'name': 'units', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': '', 'removable': False, 'type': 'str'})])}), (u'Low Tide [m AMSL]', {'expanded': False, 'name': u'Low Tide [m AMSL]', 'strictNaming': False, 'default': True, 'enabled': True, 'title': None, 'renamable': False, 'value': True, 'visible': True, 'readonly': False, 'removable': False, 'type': 'bool', 'children': OrderedDict([('name', {'expanded': True, 'name': 'name', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'Low Tide [m AMSL]', 'visible': True, 'readonly': True, 'tip': '', 'removable': False, 'type': 'str'}), ('units', {'expanded': True, 'name': 'units', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': '', 'removable': False, 'type': 'str'})])}), (u'Amplitude_W [m]', {'expanded': False, 'name': u'Amplitude_W [m]', 'strictNaming': False, 'default': True, 'enabled': True, 'title': None, 'renamable': False, 'value': True, 'visible': True, 'readonly': False, 'removable': False, 'type': 'bool', 'children': OrderedDict([('name', {'expanded': True, 'name': 'name', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'Amplitude_W [m]', 'visible': True, 'readonly': True, 'tip': '', 'removable': False, 'type': 'str'}), ('units', {'expanded': True, 'name': 'units', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': '', 'removable': False, 'type': 'str'})])})])}, 'pos': (-188.37237691512775, -129.38683246997743), 'bypass': False}, 'pos': (-188.37237691512775, -129.38683246997743), 'class': 'scatterPlotWidget', 'name': u'scatterPlotWidget.0'}]
outputNode:
    terminals:
        dataOut:
            multi: False
            io: 'in'
            renamable: False
            multiable: False
            removable: False
            optional: False
    pos: (677.8676101828728, 309.16440833144156)
    bypass: False
