pos: (0.0, 0.0)
connects: [(u'pipe.0', 'Out', u'Join Columns.0', 'B'), (u'pipe.0', 'Out', u'FFT.0', 'df'), (u'FFT.0', 'params', u'Generate Curve.0', 'tides'), ('gw1_curve', 'Curve', u'TimeseriesPlot.0', 'Curves'), ('all', 'output', u'pipe.0', 'In'), (u'Join Columns.0', 'C', u'Add.0', 'B'), (u'tidalEfficiency.0', 'E', u'Diffusivity (Ferris).0', 'E'), ('all', 'output', u'tidalEfficiency.0', 'df'), (u'Generate Curve.0', 'sig', u'Join Columns.0', 'A'), (u'pipe.0', 'Out', 'w_crve', 'df'), (u'Generate Curve.0', 'sig', 'gw1_gen', 'df'), ('w_crve', 'Curve', u'TimeseriesPlot.0', 'Curves'), (u'pipe.0', 'Out', 'gw1_curve', 'df'), (u'Join Columns.0', 'C', u'Add.0', 'A'), ('gw1_gen', 'Curve', u'TimeseriesPlot.0', 'Curves')]
terminals:
    dataOut:
        multi: False
        io: 'out'
        renamable: False
        multiable: False
        removable: False
        optional: False
    dataIn:
        multi: False
        io: 'in'
        renamable: False
        multiable: False
        removable: False
        optional: False
bypass: False
inputNode:
    terminals:
        dataIn:
            multi: False
            io: 'out'
            renamable: False
            multiable: False
            removable: False
            optional: False
    pos: (-150.0, 0.0)
    bypass: False
nodes: [{'state': {'pos': (189.67437180231212, 85.72644055755478), 'bypass': False}, 'pos': (189.67437180231212, 85.72644055755478), 'class': 'pipe', 'name': u'pipe.0'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('Select File', {'expanded': True, 'name': 'Select File', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'/home/nck/prj/master_thesis/farge/data_farge.xlsx', 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'}), ('Parameters', {'expanded': True, 'name': 'Parameters', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('sheetname', {'expanded': True, 'name': 'sheetname', 'strictNaming': False, 'default': 0, 'enabled': True, 'title': None, 'renamable': False, 'value': 0, 'visible': True, 'readonly': False, 'tip': '<string, int, mixed list of strings/ints, or None, default 0>\nStrings are used for sheet names, Integers are used in zero-indexed sheet positions.\nLists of strings/integers are used to request multiple sheets.\nSpecify `None` to get all sheets.\nstr|int -> DataFrame is returned. list|None -> Dict of DataFrames is returned, with \nkeys representing sheets.\nAvailable Cases\n - Defaults to 0 -> 1st sheet as a DataFrame\n - 1 -> 2nd sheet as a DataFrame\n - "Sheet1" -> 1st sheet as a DataFrame\n - [0,1,"Sheet5"] -> 1st, 2nd & 5th sheet as a dictionary of DataFrames\n - None -> All sheets as a dictionary of DataFrames', 'removable': False, 'type': 'str'}), ('header', {'expanded': True, 'name': 'header', 'strictNaming': False, 'default': 0, 'enabled': True, 'title': None, 'renamable': False, 'value': 0, 'visible': True, 'readonly': False, 'tip': '<int, list of ints, default 0>\nRow (0-indexed) to use for the column labels of the parsed DataFrame. If a list of \nintegers is passed those row positions will be combined into a MultiIndex', 'removable': False, 'type': 'str'}), ('skiprows', {'expanded': True, 'name': 'skiprows', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': '<list-like or integer, default None>\nRows to skip at the beginning (0-indexed)', 'removable': False, 'type': 'str'}), ('skip_footer', {'expanded': True, 'name': 'skip_footer', 'strictNaming': False, 'default': 0, 'enabled': True, 'title': None, 'renamable': False, 'value': 0, 'visible': True, 'readonly': False, 'tip': '< int, default 0>\nRows at the end to skip (0-indexed)', 'removable': False, 'type': 'str'}), ('index_col', {'expanded': True, 'name': 'index_col', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': '<int, list of ints, default None>\nColumn (0-indexed) to use as the row labels of the DataFrame. Pass None if there is \nno such column. If a list is passed, those columns will be combined into a\nMultiIndex', 'removable': False, 'type': 'str'}), ('converters', {'expanded': False, 'name': 'converters', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': '', 'visible': True, 'readonly': False, 'tip': '<dict, default None>\nDict of functions for converting values in certain columns. Keys can either be \nintegers or column labels, values are functions that take one input argument, the \nExcel cell content, and return the transformed content.', 'removable': False, 'type': 'text'}), ('parse_cols', {'expanded': True, 'name': 'parse_cols', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': '< int or list, default None>\n - If None then parse all columns,\n - If int then indicates last column to be parsed\n - If list of ints then indicates list of column numbers to be parsed\n - If string then indicates comma separated list of column names and column ranges \n   (e.g. \xe2\x80\x9cA:E\xe2\x80\x9d or \xe2\x80\x9cA,C,E:F\xe2\x80\x9d)', 'removable': False, 'type': 'str'}), ('na_values', {'expanded': True, 'name': 'na_values', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': '< list-like, default None>\n List of additional strings to recognize as NA/NaN', 'removable': False, 'type': 'str'}), ('keep_default_na', {'expanded': True, 'name': 'keep_default_na', 'strictNaming': False, 'default': True, 'enabled': True, 'title': None, 'renamable': False, 'value': True, 'visible': True, 'readonly': False, 'tip': '<bool, default True>\nIf na_values are specified and keep_default_na is False the default NaN values are \noverridden, otherwise they\xe2\x80\x99re appended to', 'removable': False, 'type': 'bool'}), ('thousands', {'expanded': True, 'name': 'thousands', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': '<str, default None>\nThousands separator for parsing string columns to numeric. Note that this parameter \nis only necessary for columns stored as TEXT in Excel, any numeric columns will \nautomatically be parsed, regardless of display format.', 'removable': False, 'type': 'str'}), ('Additional parameters', {'expanded': False, 'name': 'Additional parameters', 'strictNaming': False, 'default': '#Pass here manually params. For Example:\n#{"verbose": False, "engine": None, "convert_float": True}\n{}', 'enabled': True, 'title': None, 'renamable': False, 'value': '#Pass here manually params. For Example:\n#{"verbose": False, "engine": None, "convert_float": True}\n{}', 'visible': True, 'readonly': False, 'removable': False, 'type': 'text'})])}), ('Load File', {'expanded': True, 'name': 'Load File', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'})])}, 'pos': (-180.87744542900833, -64.50524820219375), 'bypass': False}, 'pos': (-180.87744542900833, -64.50524820219375), 'class': 'readXLS', 'name': 'all'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('label', {'expanded': True, 'name': 'label', 'strictNaming': False, 'default': 'Generated Curve', 'enabled': True, 'title': 'Curve Label', 'renamable': False, 'value': u'Generated GW1', 'visible': True, 'readonly': False, 'tip': 'Label of the curve to be displayed in pd.DataFrame', 'removable': False, 'type': 'str'}), ('eq', {'expanded': True, 'name': 'eq', 'limits': {'Simple Tide Equation': 'tide', 'Ferris 1951 Equation': 'ferris', 'Xia 2007 Equation': 'xia'}, 'strictNaming': False, 'default': None, 'enabled': True, 'title': 'Governing Equation', 'renamable': False, 'value': 'ferris', 'visible': True, 'readonly': False, 'tip': 'Equation to generate curve. See documentation', 'values': {'Simple Tide Equation': 'tide', 'Ferris 1951 Equation': 'ferris', 'Xia 2007 Equation': 'xia'}, 'removable': False, 'type': 'list'}), ('tides_grp', {'expanded': True, 'name': 'tides_grp', 'strictNaming': False, 'default': None, 'enabled': True, 'title': 'Tide Components', 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('n_sig', {'expanded': True, 'name': 'n_sig', 'strictNaming': False, 'default': None, 'enabled': True, 'title': 'N Signal Components', 'renamable': False, 'value': 500, 'visible': True, 'readonly': True, 'removable': False, 'type': 'int'}), ('A', {'expanded': True, 'name': 'A', 'limits': ['Amplitude [m]', 'Angular Velocity [rad/s]', 'Phase shift [rad]'], 'strictNaming': False, 'default': None, 'tip': 'Name of the column with Amplitude data in dataframe in input terminal', 'title': 'Amplitude', 'renamable': False, 'value': 'Amplitude [m]', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('omega', {'expanded': True, 'name': 'omega', 'limits': ['Amplitude [m]', 'Angular Velocity [rad/s]', 'Phase shift [rad]'], 'strictNaming': False, 'default': None, 'tip': 'Name of the column with Angular Velocity data in dataframe in input terminal', 'title': 'Angular Velocity', 'renamable': False, 'value': 'Angular Velocity [rad/s]', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('phi', {'expanded': True, 'name': 'phi', 'limits': ['Amplitude [m]', 'Angular Velocity [rad/s]', 'Phase shift [rad]'], 'strictNaming': False, 'default': None, 'tip': 'Name of the column with Phase Shift data in dataframe in input terminal', 'title': 'Phase Shift', 'renamable': False, 'value': 'Phase shift [rad]', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True})])}), ('W', {'expanded': True, 'name': 'W', 'strictNaming': False, 'default': 0.5062222917236784, 'enabled': True, 'title': 'Constant to add', 'renamable': False, 'value': 0.5062222917236784, 'visible': True, 'readonly': False, 'tip': 'Constant value [meters] to be added to generated signal. Usefull to fit to average water level.', 'removable': False, 'type': 'float', 'suffix': ' m'}), ('t_grp', {'expanded': True, 'name': 't_grp', 'strictNaming': False, 'default': None, 'enabled': True, 'title': 'Time Options', 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('t0', {'expanded': True, 'name': 't0', 'strictNaming': False, 'default': '2015-12-31 00:00:00', 'enabled': True, 'title': 'Start', 'renamable': False, 'value': u'2014-10-17 15:00:00', 'visible': True, 'readonly': False, 'tip': 'Datetime of the initial timestep', 'removable': False, 'type': 'str'}), ('tend', {'expanded': True, 'name': 'tend', 'strictNaming': False, 'default': '2016-01-30 00:00:00', 'enabled': True, 'title': 'Stop', 'renamable': False, 'value': u'2015-04-13 06:00:00', 'visible': True, 'readonly': False, 'tip': 'Datetime of the last timestep', 'removable': False, 'type': 'str'}), ('dt', {'expanded': True, 'suffix': ' s', 'tip': 'Timesep duration in seconds', 'visible': True, 'step': 60, 'name': 'dt', 'limits': (0.0, 100000000000.0), 'strictNaming': False, 'default': 3600, 'title': 'Delta Time', 'renamable': False, 'value': 600, 'readonly': False, 'removable': False, 'type': 'int', 'enabled': True})])}), ('ferris_grp', {'expanded': True, 'name': 'ferris_grp', 'strictNaming': False, 'default': None, 'enabled': True, 'title': 'Ferris Parameters', 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('D', {'expanded': True, 'suffix': ' m**2/s', 'strictNaming': False, 'default': 0.5, 'tip': 'Diffusivity of the aquifer', 'title': 'Diffusivity', 'renamable': False, 'readonly': False, 'value': 0.0049, 'visible': True, 'step': 0.1, 'removable': False, 'type': 'float', 'enabled': True, 'name': 'D'}), ('x', {'expanded': True, 'suffix': ' m', 'tip': 'Distance between the observation point in aquifer and the shore-line', 'visible': True, 'step': 5.0, 'name': 'x', 'limits': (0.0, 100000000000.0), 'strictNaming': False, 'default': 0.0, 'title': 'Distance to shore', 'renamable': False, 'value': 10.0, 'readonly': False, 'removable': False, 'type': 'float', 'enabled': True})])}), ('xia_grp', {'expanded': False, 'name': 'xia_grp', 'strictNaming': False, 'default': None, 'enabled': True, 'title': 'Xia Parameters', 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('x', {'expanded': True, 'suffix': ' m', 'limits': (0.0, 100000000000.0), 'strictNaming': False, 'default': 0.0, 'tip': 'Distance between the observation point in aquifer and the shore-line', 'title': 'Distance to shore', 'renamable': False, 'value': 0.0, 'visible': True, 'readonly': False, 'removable': False, 'type': 'float', 'enabled': True, 'name': 'x'}), ('alpha', {'expanded': True, 'suffix': ' m*s**2/kg', 'tip': 'Compressibility of the confined aquifers skeleton. Used for calculation of Specific Storage Ss', 'visible': True, 'step': 1e-05, 'name': 'alpha', 'limits': (0.0, 1), 'strictNaming': False, 'default': 1e-08, 'title': 'Skeleton compressibility', 'renamable': False, 'value': 1e-08, 'readonly': False, 'removable': False, 'type': 'float', 'enabled': True}), ('beta', {'expanded': True, 'suffix': ' m*s**2/kg', 'tip': 'Compressibility of pore water in the confined aquifer. Used for calculation of Specific Storage Ss', 'visible': True, 'step': 1e-05, 'name': 'beta', 'limits': (0.0, 1), 'strictNaming': False, 'default': 4.8e-10, 'title': 'Water compressibility', 'renamable': False, 'value': 4.8e-10, 'readonly': False, 'removable': False, 'type': 'float', 'enabled': True}), ('theta', {'expanded': True, 'name': 'theta', 'limits': (0.0, 1), 'strictNaming': False, 'default': 0.4, 'tip': 'Porosity (dimensionless) of the aquifer. Used for calculation of Specific Storage Ss', 'title': 'Porosity', 'renamable': False, 'readonly': False, 'value': 0.35, 'visible': True, 'step': 0.01, 'removable': False, 'type': 'float', 'enabled': True}), ('L', {'expanded': True, 'suffix': ' m', 'limits': (0.0, 100000000000.0), 'strictNaming': False, 'default': 100.0, 'tip': 'Distance to which aquifers roof extends into the sea', 'title': 'Roof length', 'renamable': False, 'value': 100.0, 'visible': True, 'readonly': False, 'removable': False, 'type': 'float', 'enabled': True, 'name': 'L'}), ('L_inf', {'expanded': True, 'name': 'L_inf', 'strictNaming': False, 'default': False, 'enabled': True, 'title': 'Infinite Roof length', 'renamable': False, 'value': False, 'visible': True, 'readonly': False, 'tip': 'Check this to set roof length to infinity', 'removable': False, 'type': 'bool'}), ('K1', {'expanded': True, 'suffix': ' m/s', 'tip': 'Vertical hydraulic conductivity of the aquifer roof', 'visible': True, 'step': 1e-05, 'name': 'K1', 'limits': (0.0, 1), 'strictNaming': False, 'default': 1e-06, 'title': 'Kf (roof)', 'renamable': False, 'value': 1e-06, 'readonly': False, 'removable': False, 'type': 'float', 'enabled': True}), ('b1', {'expanded': True, 'suffix': ' m', 'tip': 'Thickness of the aquifer roof', 'visible': True, 'step': 0.1, 'name': 'b1', 'limits': (0.0, 100), 'strictNaming': False, 'default': 5.0, 'title': 'b (roof)', 'renamable': False, 'value': 5.0, 'readonly': False, 'removable': False, 'type': 'float', 'enabled': True}), ('K', {'expanded': True, 'suffix': ' m/s', 'tip': 'Hydraulic conductivity of the (leaky) confined aquifer', 'visible': True, 'step': 1e-05, 'name': 'K', 'limits': (0.0, 1), 'strictNaming': False, 'default': 0.0001, 'title': 'Kf (aquifer)', 'renamable': False, 'value': 0.0001, 'readonly': False, 'removable': False, 'type': 'float', 'enabled': True}), ('b', {'expanded': True, 'suffix': ' m', 'tip': 'Thickness of the (leaky) cofined aquifer', 'visible': True, 'step': 1, 'name': 'b', 'limits': (0.0, 1000), 'strictNaming': False, 'default': 20.0, 'title': 'b (aquifer)', 'renamable': False, 'value': 20.0, 'readonly': False, 'removable': False, 'type': 'float', 'enabled': True}), ('K_cap', {'expanded': True, 'suffix': ' m/s', 'tip': 'Permeability of the outlet-capping', 'visible': True, 'step': 1e-05, 'name': 'K_cap', 'limits': (0.0, 1), 'strictNaming': False, 'default': 1e-06, 'title': 'Kf (capping)', 'renamable': False, 'value': 1e-06, 'readonly': False, 'removable': False, 'type': 'float', 'enabled': True}), ('b_cap', {'expanded': True, 'suffix': ' m', 'tip': 'Thickness of the aquifers outlet-capping', 'visible': True, 'step': 0.1, 'name': 'b_cap', 'limits': (0.0, 100), 'strictNaming': False, 'default': 1.0, 'title': 'b (capping)', 'renamable': False, 'value': 1.0, 'readonly': False, 'removable': False, 'type': 'float', 'enabled': True}), ('Ss', {'expanded': True, 'name': 'Ss', 'strictNaming': False, 'default': -999.0, 'enabled': True, 'title': 'Specific Storage', 'renamable': False, 'value': 9.974808e-05, 'visible': True, 'readonly': True, 'removable': False, 'type': 'float', 'suffix': ' 1/m'}), ('D', {'expanded': True, 'name': 'D', 'strictNaming': False, 'default': -999.0, 'enabled': True, 'title': 'Diffusivity', 'renamable': False, 'value': 1.0025255623967901, 'visible': True, 'readonly': True, 'removable': False, 'type': 'float', 'suffix': ' m**2/s'})])})])}, 'pos': (489.55741855406916, 94.69764946228497), 'bypass': False}, 'pos': (489.55741855406916, 94.69764946228497), 'class': 'Generate Curve', 'name': u'Generate Curve.0'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('grp', {'expanded': True, 'name': 'grp', 'strictNaming': False, 'default': None, 'enabled': True, 'addText': 'Add', 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'title': 'Columns to add from B', 'type': 'group', 'children': OrderedDict([('1', {'expanded': True, 'name': '1', 'strictNaming': False, 'default': u'Weser', 'enabled': True, 'title': 'Join column:', 'renamable': False, 'value': u'Weser', 'visible': True, 'readonly': True, 'removable': True, 'type': 'str'})]), 'addList': [u'Datetime', u'GW_1', u'GW_2', u'GW_3', u'GW_4', u'GW_5', u'GW_6', u'Weser']})])}, 'pos': (496.9129700170545, -50.3276075435772), 'bypass': False}, 'pos': (496.9129700170545, -50.3276075435772), 'class': 'Join Columns', 'name': u'Join Columns.0'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('x0', {'expanded': True, 'suffix': 'm', 'limits': (0.0, 10000000.0), 'strictNaming': False, 'default': 0.0, 'tip': 'Distance between an observed well and shoreline (in meters)', 'title': 'Distance', 'renamable': False, 'value': 10.0, 'visible': True, 'readonly': False, 'removable': False, 'type': 'float', 'enabled': True, 'name': 'x0'}), ('t0', {'expanded': True, 'suffix': 'hours', 'limits': (0.0, 100000000000.0), 'strictNaming': False, 'default': 12.42, 'tip': 'Period of the tide (in hours)', 'title': 'Tide Period', 'renamable': False, 'value': 12.42, 'visible': True, 'readonly': False, 'removable': False, 'type': 'float', 'enabled': True, 'name': 't0'}), ('E_grp', {'expanded': True, 'name': 'E_grp', 'strictNaming': False, 'default': None, 'enabled': True, 'title': 'Tidal Efficiency Parameters', 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'tip': '', 'removable': False, 'type': 'group', 'children': OrderedDict([('E', {'expanded': True, 'name': 'E', 'strictNaming': False, 'default': 1.0, 'enabled': True, 'title': 'Tidal Efficiency', 'renamable': False, 'value': 0.30288056264627705, 'visible': True, 'readonly': False, 'tip': 'Estimated or guessed Tidal Efficiency of an aquifer near an observed well (dimensionless).', 'removable': False, 'type': 'float'}), ('manual_E', {'expanded': True, 'name': 'manual_E', 'strictNaming': False, 'default': False, 'enabled': True, 'title': 'Set `E` Manually', 'renamable': False, 'value': False, 'visible': True, 'readonly': False, 'tip': 'Use Tidal Efficiency value received in terminal or set manually. If checked - set manually', 'removable': False, 'type': 'bool'})])}), ('tlag_grp', {'expanded': True, 'name': 'tlag_grp', 'strictNaming': False, 'default': None, 'enabled': True, 'title': 'Time Lag Parameters', 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'tip': '', 'removable': False, 'type': 'group', 'children': OrderedDict([('tlag', {'expanded': True, 'suffix': 'min', 'limits': (0.0, 600.0), 'strictNaming': False, 'default': 0.0, 'tip': 'Estimated or guessed Time Lag (in minutes) of the groundwater fluctuation-signal in observed well.', 'title': 'Time Lag', 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'float', 'enabled': True, 'name': 'tlag'}), ('manual_tlag', {'expanded': True, 'name': 'manual_tlag', 'strictNaming': False, 'default': False, 'enabled': True, 'title': 'Set `tlag` Manually', 'renamable': False, 'value': False, 'visible': True, 'readonly': False, 'tip': 'Use Time Lag value received in terminal or set manually. If checked - set manually', 'removable': False, 'type': 'bool'})])}), ('D_grp', {'expanded': True, 'name': 'D_grp', 'strictNaming': False, 'default': None, 'enabled': True, 'title': 'Calculated Diffusivity', 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'tip': '', 'removable': False, 'type': 'group', 'children': OrderedDict([('D_e', {'expanded': True, 'name': 'D_e', 'strictNaming': False, 'default': '', 'enabled': True, 'title': 'Diffusivity (E)', 'renamable': False, 'value': '0.0049', 'visible': True, 'readonly': True, 'removable': False, 'type': 'str'}), ('D_tlag', {'expanded': True, 'name': 'D_tlag', 'strictNaming': False, 'default': '', 'enabled': True, 'title': 'Diffusivity (tlag)', 'renamable': False, 'value': None, 'visible': True, 'readonly': True, 'removable': False, 'type': 'str'})])})])}, 'pos': (171.2649926078896, -69.76214484784688), 'bypass': False}, 'pos': (171.2649926078896, -69.76214484784688), 'class': 'Diffusivity (Ferris)', 'name': u'Diffusivity (Ferris).0'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('sig', {'expanded': True, 'name': 'sig', 'limits': [u'GW_1', u'GW_2', u'GW_3', u'GW_4', u'GW_5', u'GW_6', u'Weser'], 'strictNaming': False, 'default': None, 'tip': 'Name of the column with waterlevel data.', 'title': 'Signal', 'renamable': False, 'value': u'Weser', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('datetime', {'expanded': True, 'name': 'datetime', 'limits': [u'Datetime'], 'strictNaming': False, 'default': None, 'tip': 'Name of the column with datetime (or __index__)', 'title': 'Datetime', 'renamable': False, 'value': u'Datetime', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('N_MAX_POW', {'expanded': True, 'name': 'N_MAX_POW', 'limits': (1, 100000000000.0), 'strictNaming': False, 'default': 1, 'enabled': True, 'title': 'Number of Sinusoids', 'renamable': False, 'value': 500, 'visible': True, 'readonly': False, 'tip': 'Number of partial sinusoids used to fit data. Sinusoids with most powerful frequencies are selected. See docs', 'removable': False, 'type': 'int'}), ('ranges', {'expanded': True, 'name': 'ranges', 'strictNaming': False, 'default': False, 'enabled': True, 'title': 'Slice datetime', 'renamable': False, 'value': False, 'visible': True, 'readonly': False, 'removable': False, 'type': 'bool'}), ('t0', {'expanded': True, 'name': 't0', 'strictNaming': False, 'default': '2014-10-17 15:00:00', 'enabled': True, 'title': 'Datetime Start', 'renamable': False, 'value': '2014-10-17 15:00:00', 'visible': True, 'readonly': False, 'tip': 'start of the slice region', 'removable': False, 'type': 'str'}), ('t1', {'expanded': True, 'name': 't1', 'strictNaming': False, 'default': '2015-04-13 06:00:00', 'enabled': True, 'title': 'Datetime Stop', 'renamable': False, 'value': '2015-04-13 06:00:00', 'visible': True, 'readonly': False, 'tip': 'end of the slice region', 'removable': False, 'type': 'str'}), ('eq', {'expanded': True, 'name': 'eq', 'strictNaming': False, 'default': '', 'enabled': True, 'title': 'Generated Equation', 'renamable': False, 'value': u'def generated_function(t): return (np.zeros(25579) + [ 0.50622229] + 1.53195598246*np.cos(0.000140423300387*t+-2.32495738111) + 0.491407454336*np.cos(0.000140832697764*t+0.788185733404) + 0.198725757733*np.cos(0.000141242095142*t+0.654556750368) + 0.109411521702*np.cos(0.000141651492519*t+0.717271084409) + 0.0325985650078*np.cos(0.000138785710878*t+-1.99777997038) + 0.0890459048308*np.cos(0.000139195108256*t+-2.33257375215) + 0.145771707805*np.cos(0.000139604505633*t+-2.36170764037) + 0.260013247989*np.cos(0.00014001390301*t+-2.46613679166) + 0.114630426758*np.cos(0.000142060889896*t+0.626701250414) + 0.0649384869674*np.cos(0.000142470287273*t+0.68153971824) + 0.0085135991691*np.cos(0.000293537919468*t+2.95345590502) + 0.0074696793187*np.cos(0.000292719124714*t+2.34890063027) + 0.0118039398554*np.cos(0.000847861968227*t+-1.64851801153) + 0.00772399810894*np.cos(0.000569471751716*t+-0.496053402938) + 0.0172714016416*np.cos(0.000121591021035*t+-1.92894972367) + 0.0110508797242*np.cos(0.000122000418412*t+0.106512884516) + 0.0174584568086*np.cos(0.000120772226281*t+-2.15285575542) + 0.0128627389689*np.cos(0.000119953431526*t+-2.94376595095) + 0.015911828144*np.cos(0.000120362828903*t+-0.551344329117) + 0.0120850457065*np.cos(0.000119134636772*t+-3.09028705919) + 0.0128049608393*np.cos(0.000119544034149*t+-1.17865253256) + 0.00856076694646*np.cos(0.000118315842017*t+2.78286219755) + 0.0103154967307*np.cos(8.106068069e-05*t+0.417717037013) + 0.0126361336087*np.cos(8.06512833128e-05*t+-0.701107232319) + 0.0161219752358*np.cos(7.94230911811e-05*t+-1.52153518052) + 0.00746735395742*np.cos(7.90136938039e-05*t+-1.97093331391) + 0.0176188962777*np.cos(8.02418859355e-05*t+-0.877638372274) + 0.00890923256264*np.cos(7.98324885583e-05*t+3.03971713305) + 0.00920433702133*np.cos(7.77855016722e-05*t+1.53296723493) + 0.0126428652919*np.cos(7.81948990494e-05*t+-1.77424477264) + 0.0131292848091*np.cos(0.000110127894473*t+-1.23314094039) + 0.0179586694887*np.cos(0.000110946689227*t+-1.54257481067) + 0.0109143109411*np.cos(0.000111765483982*t+-0.174503887276) + 0.0126657259797*np.cos(0.000112174881359*t+2.64949739659) + 0.014308432988*np.cos(0.000112584278736*t+-1.85093618631) + 0.0135441184668*np.cos(0.000113403073491*t+-2.11418922794) + 0.00796758475606*np.cos(0.000113812470868*t+2.99591632766) + 0.0106873029564*np.cos(0.000212886636156*t+-2.7644559477) + 0.0103622352597*np.cos(0.000213296033533*t+0.87439815803) + 0.00778758954402*np.cos(0.000415947735258*t+-0.395003880548) + 0.00730684885041*np.cos(0.000413491350994*t+1.53670806133) + 0.0115178057928*np.cos(0.000413900748372*t+2.58151220429) + 0.00802359719282*np.cos(0.000414310145749*t+-1.18073252674) + 0.00882154222709*np.cos(0.000183410024996*t+2.42207737085) + 0.0164246977295*np.cos(0.000180953640732*t+1.33768477777) + 0.00853373366719*np.cos(0.000180544243355*t+1.3381007622) + 0.0129037848519*np.cos(0.000180134845978*t+1.08899711372) + 0.0107836381936*np.cos(0.000182591230241*t+1.68872710631) + 0.0100195011956*np.cos(0.000182181832864*t+2.15335341823) + 0.00788207487509*np.cos(0.000181772435487*t+1.2932495949) + 0.0106577882273*np.cos(0.000181363038109*t+1.98067197569) + 0.0157960029864*np.cos(4.38055193628e-05*t+0.990775538163) + 0.0463648947236*np.cos(4.421491674e-05*t+0.39459248769) + 0.0283811334516*np.cos(4.13491350994e-05*t+1.95855489459) + 0.0098308228478*np.cos(4.17585324767e-05*t+-0.515778520571) + 0.0227372785738*np.cos(4.0530340345e-05*t+2.19776435265) + 0.0194697804944*np.cos(4.09397377222e-05*t+-0.855301719123) + 0.0262677358801*np.cos(4.29867246083e-05*t+1.88346744276) + 0.011160466415*np.cos(4.33961219856e-05*t+0.127210825211) + 0.0491023837149*np.cos(4.21679298539e-05*t+0.984932220366) + 0.00888338865652*np.cos(4.25773272311e-05*t+1.07594511735) + 0.00699808617455*np.cos(1.55571003344e-05*t+-2.73636464559) + 0.0102531076148*np.cos(1.51477029572e-05*t+0.828206583425) + 0.0240461013963*np.cos(1.31007160711e-05*t+1.82115370073) + 0.0993172543529*np.cos(1.26913186939e-05*t+1.09216574869) + 0.00896292815423*np.cos(1.22819213167e-05*t+2.81452713997) + 0.0401934979363*np.cos(1.18725239394e-05*t+0.5427574486) + 0.0305841636722*np.cos(1.473830558e-05*t+0.406849930938) + 0.0436927028016*np.cos(1.43289082028e-05*t+2.11054470709) + 0.0229852393698*np.cos(1.39195108256e-05*t+1.68880586806) + 0.0102594636097*np.cos(0.000263651910931*t+2.82561874652) + 0.00953916879257*np.cos(0.000179316051223*t+0.593781251122) + 0.0075992051365*np.cos(0.000178087859092*t+2.23360326137) + 0.0144887258296*np.cos(0.000177269064337*t+2.04306473915) + 0.0165591164589*np.cos(0.000176450269583*t+2.2932666141) + 0.016078491037*np.cos(0.000175631474828*t+1.74535410553) + 0.0817109126657*np.cos(0.000138376313501*t+2.69588830876) + 0.231897851955*np.cos(0.000137966916124*t+-0.240106606802) + 0.0550691717469*np.cos(0.000136738723992*t+-2.87295703184) + 0.0304134978951*np.cos(0.000136329326615*t+-3.09125422792) + 0.100330831572*np.cos(0.000137557518747*t+-2.52555294033) + 0.0471359394104*np.cos(0.000137148121369*t+-2.8148275881) + 0.104592129043*np.cos(0.000135101134483*t+-1.80658594807) + 0.0270919987076*np.cos(0.000134691737106*t+-2.04996623901) + 0.0803803721556*np.cos(0.000135919929238*t+2.46794674876) + 0.198808232354*np.cos(0.000135510531861*t+-1.35118937317) + 0.108745705209*np.cos(2.04698688611e-06*t+1.83741379417) + 0.0136784097557*np.cos(0.000562102598926*t+1.56576905089) + 0.0324947431905*np.cos(4.01209429678e-05*t+-2.04000089983) + 0.0211111988683*np.cos(3.97115455906e-05*t+2.73602959504) + 0.0375139889271*np.cos(3.684576395e-05*t+-2.52646016596) + 0.0189794841484*np.cos(3.64363665728e-05*t+0.581764211908) + 0.0328803067511*np.cos(3.76645587044e-05*t+-2.84347445354) + 0.0182677945716*np.cos(3.72551613272e-05*t+0.513284457519) + 0.0311848263829*np.cos(3.84833534589e-05*t+-3.00797354335) + 0.0502267371557*np.cos(3.80739560817e-05*t+3.05149990439) + 0.00969742240065*np.cos(3.93021482133e-05*t+1.87376590012) + 0.0279882275605*np.cos(3.88927508361e-05*t+-2.65277685618) + 0.0157927050054*np.cos(9.70271784017e-05*t+-0.836551351041) + 0.00709325441651*np.cos(9.74365757789e-05*t+-1.93822428814) + 0.0100172111632*np.cos(9.62083836472e-05*t+-2.21511444043) + 0.00961726871186*np.cos(9.66177810244e-05*t+-2.80831107519) + 0.00764734185912*np.cos(9.37519993839e-05*t+-2.26697660097) + 0.00760223102013*np.cos(9.41613967611e-05*t+0.750356172996) + 0.0133932497083*np.cos(9.49801915155e-05*t+-2.73162442305) + 0.00957623735233*np.cos(0.000431504835592*t+-0.0762472711311) + 0.00854433589437*np.cos(0.000250960592237*t+1.6285708831) + 0.00742431490261*np.cos(5.93626196972e-05*t+0.372912770008) + 0.0104562739055*np.cos(5.97720170744e-05*t+2.9823633285) + 0.0163444833577*np.cos(5.85438249428e-05*t+1.95037621594) + 0.0214124366109*np.cos(5.895322232e-05*t+1.22467779289) + 0.0166386754847*np.cos(5.77250301883e-05*t+0.0055830280715) + 0.017656715333*np.cos(5.81344275655e-05*t+-0.0459748581685) + 0.0158288423484*np.cos(5.69062354339e-05*t+-1.30759656701) + 0.0112152558685*np.cos(0.000251779386992*t+1.21381499456) + 0.0306809382394*np.cos(6.01814144517e-05*t+0.905169162391) + 0.00727744902131*np.cos(6.05908118289e-05*t+2.24205989576) + 0.0109273230315*np.cos(0.000852774736754*t+1.09896252593) + 0.0518709076169*np.cos(0.000281255998152*t+0.399172168257) + 0.00949794227658*np.cos(0.00028002780602*t+2.68075105952) + 0.00953653916444*np.cos(0.000279618408643*t+2.48965107943) + 0.0634300305226*np.cos(0.000280846600774*t+-2.86688139142) + 0.00837263716912*np.cos(0.000280437203397*t+-2.57539267631) + 0.0190380532802*np.cos(0.000278390216511*t+-0.329875661582) + 0.00969805875173*np.cos(0.000279209011266*t+-1.95504980157) + 0.0231467885828*np.cos(0.000278799613888*t+2.01016184795) + 0.0103119526972*np.cos(5.40404537933e-05*t+-2.43841249642) + 0.00847339430203*np.cos(5.36310564161e-05*t+2.18719379571) + 0.0135149369553*np.cos(5.28122616617e-05*t+-0.853530202575) + 0.0144099189943*np.cos(5.56780433022e-05*t+-2.62931141425) + 0.0151167415795*np.cos(5.5268645925e-05*t+1.46728365074) + 0.0240836847229*np.cos(5.48592485478e-05*t+2.71229900733) + 0.0206724460851*np.cos(5.44498511705e-05*t+2.51583418158) + 0.0124754630604*np.cos(5.64968380567e-05*t+-1.46151085648) + 0.0192634584146*np.cos(5.60874406794e-05*t+2.12963235563) + 0.00995993582468*np.cos(0.000201014112216*t+2.36926914583) + 0.0346018078408*np.cos(9.41613967611e-06*t+-0.536640522958) + 0.111452729221*np.cos(9.82553705333e-06*t+-2.89156641777) + 0.03600109268*np.cos(1.02349344306e-05*t+-1.58211631473) + 0.0311321384769*np.cos(1.06443318078e-05*t+-3.02451482923) + 0.028126657844*np.cos(7.77855016722e-06*t+-1.63408368052) + 0.0724342723582*np.cos(8.18794754444e-06*t+3.0720094714) + 0.0136103421616*np.cos(8.59734492167e-06*t+-1.86273255541) + 0.0736071106683*np.cos(9.00674229889e-06*t+2.51741249089) + 0.0664200717407*np.cos(1.1053729185e-05*t+0.98208246676) + 0.0176812494763*np.cos(1.14631265622e-05*t+0.733508846768) + 0.0109046209524*np.cos(0.000166215335152*t+1.72141181453) + 0.0111601234392*np.cos(0.000165805937775*t+2.66662932361) + 0.0111906860331*np.cos(0.000165396540398*t+1.66662397924) + 0.013118202132*np.cos(0.000164987143021*t+1.66594391614) + 0.0157619926969*np.cos(0.000164577745643*t+1.1141249833) + 0.00698949147836*np.cos(0.000164168348266*t+1.65431342193) + 0.0126035135743*np.cos(0.000163758950889*t+1.09606397104) + 0.00757024110116*np.cos(0.000163349553512*t+1.48360548582) + 0.00703109157352*np.cos(0.000564149585812*t+-2.99479061124) + 0.011163306204*np.cos(0.000167034129907*t+1.64299513899) + 0.00872375583658*np.cos(0.000420451106407*t+-1.57930169181) + 0.0189582275628*np.cos(0.00015475220859*t+1.3230826602) + 0.0119768670466*np.cos(0.000154342811213*t+0.718993113644) + 0.0272819078653*np.cos(0.000151477029572*t+1.99467551) + 0.0161506546062*np.cos(0.000151067632195*t+1.63503456552) + 0.0185870761404*np.cos(0.000152295824327*t+1.88037836937) + 0.0156282098231*np.cos(0.000151886426949*t+1.69977706089) + 0.0106092750231*np.cos(0.000153114619081*t+1.52976045339) + 0.0231281745801*np.cos(0.000152705221704*t+1.49278515868) + 0.0102518094411*np.cos(0.000153933413836*t+0.954822462992) + 0.00999798318896*np.cos(0.000153524016458*t+1.8040886325) + 0.00760099861095*np.cos(0.000287806356187*t+2.5621714006) + 0.00762058479237*np.cos(0.000288215753564*t+2.7201425645) + 0.0160788040021*np.cos(0.000288625150942*t+-2.98313158767) + 0.0379520211863*np.cos(0.000286168766678*t+2.46755316657) + 0.00964552982641*np.cos(0.000252598181746*t+1.58438402301) + 0.012373291535*np.cos(0.000286987561433*t+-3.12654631484) + 0.0115461700408*np.cos(0.00028739695881*t+2.43079762895) + 0.0107339269936*np.cos(0.000160483771871*t+1.34132106739) + 0.00852545784456*np.cos(0.000160074374494*t+1.11609664556) + 0.0190211712793*np.cos(3.56175718183e-05*t+1.42230933922) + 0.0334423736185*np.cos(3.60269691956e-05*t+-1.59856755324) + 0.0102963534969*np.cos(0.000161302566626*t+1.10340474049) + 0.010176869022*np.cos(0.000160893169248*t+1.37832464507) + 0.0381715369968*np.cos(3.3161187555e-05*t+-1.30390727268) + 0.0289648730986*np.cos(3.35705849322e-05*t+-2.88911172448) + 0.00963273842164*np.cos(0.000162940156134*t+0.758332076086) + 0.0315380487202*np.cos(3.27517901778e-05*t+0.994812314926) + 0.0139788975598*np.cos(3.47987770639e-05*t+-1.15478033147) + 0.0501173192412*np.cos(3.52081744411e-05*t+-1.22887228003) + 0.0532550948868*np.cos(3.39799823094e-05*t+-2.03288232622) + 0.0380851588885*np.cos(3.43893796867e-05*t+-1.78962869793) + 0.0085558823157*np.cos(0.00070006951505*t+-1.61297003767) + 0.0102449834797*np.cos(0.000702525899313*t+2.13412989998) + 0.0439761098926*np.cos(2.45638426333e-06*t+1.77312406616) + 0.00839734344578*np.cos(0.000248094810597*t+2.79526873616) + 0.00852847504914*np.cos(0.000239906863052*t+0.782727046827) + 0.00856295341069*np.cos(0.000239088068298*t+-0.0932536869046) + 0.00750319951812*np.cos(0.000237859876166*t+1.19888799508) + 0.0104858663383*np.cos(0.000100711754797*t+-2.08165284021) + 0.0101592038843*np.cos(9.82553705333e-05*t+-2.91200061628) + 0.0089200357244*np.cos(9.78459731561e-05*t+0.0775959934882) + 0.00801850835601*np.cos(9.86647679105e-05*t+-1.17917113865) + 0.00773481484767*np.cos(0.000251369989614*t+2.62848765611) + 0.00741520052501*np.cos(0.000101121152174*t+1.02286234463) + 0.00748107899436*np.cos(0.000210430251892*t+0.998794994232) + 0.00956498389599*np.cos(0.000187094601391*t+1.24094682603) + 0.00794519805316*np.cos(0.000255873360764*t+0.729508039781) + 0.00712925727164*np.cos(0.000255054566009*t+-0.828048454528) + 0.0107456796936*np.cos(0.000185047614504*t+1.48045225333) + 0.0111280362756*np.cos(0.000185866409259*t+1.29695073583) + 0.0108591872243*np.cos(0.000186275806636*t+1.01176734884) + 0.00996328007921*np.cos(0.000186685204013*t+2.11969435882) + 0.0617523901528*np.cos(7.28727331455e-05*t+1.98180736624) + 0.0182804723685*np.cos(7.24633357683e-05*t+-2.89494429605) + 0.0235587549724*np.cos(7.20539383911e-05*t+2.39968827494) + 0.0132849809795*np.cos(7.16445410139e-05*t+2.44654176461) + 0.0290203978384*np.cos(7.08257462594e-05*t+1.53488602993) + 0.0160219582765*np.cos(7.04163488822e-05*t+2.55767380391) + 0.0126096643175*np.cos(7.0006951505e-05*t+0.446659624114) + 0.0139726514822*np.cos(6.95975541278e-05*t+0.707869762771) + 0.0126668978609*np.cos(6.91881567505e-05*t+-0.848402093254) + 0.00697836049827*np.cos(0.000268564679458*t+1.79435690371) + 0.00840972146924*np.cos(7.41009252772e-05*t+-1.64217492083) + 0.0107986525887*np.cos(7.45103226544e-05*t+-0.551575595873) + 0.00912036596262*np.cos(7.32821305228e-05*t+-2.27146747548) + 0.0192771413542*np.cos(7.36915279e-05*t+-0.742872162286) + 0.0109662353862*np.cos(7.57385147861e-05*t+1.03654669605) + 0.0195314195701*np.cos(7.61479121633e-05*t+0.0740009848903) + 0.0151645686458*np.cos(7.49197200317e-05*t+0.245467806518) + 0.0129108537008*np.cos(7.65573095405e-05*t+0.893123971721) + 0.0131947586527*np.cos(7.69667069178e-05*t+1.27820462684) + 0.0387588412706*np.cos(4.09397377222e-06*t+0.123318678326) + 0.109300415974*np.cos(3.684576395e-06*t+-2.07507101988) + 0.0728196283951*np.cos(4.91276852667e-06*t+-2.43738021768) + 0.10852498925*np.cos(4.50337114944e-06*t+-1.76546161273) + 0.102270543381*np.cos(5.73156328111e-06*t+-0.519209485492) + 0.045046574906*np.cos(5.32216590389e-06*t+-2.38223837403) + 0.0397092475462*np.cos(6.55035803555e-06*t+0.678259547662) + 0.0208475617518*np.cos(6.14096065833e-06*t+2.93510358443) + 0.144401088668*np.cos(7.36915279e-06*t+1.82022060835) + 0.0448098964203*np.cos(6.95975541278e-06*t+-1.53303312975) + 0.0356607956413*np.cos(2.49732400106e-05*t+1.61802543557) + 0.0211064118084*np.cos(0.000131416558088*t+-3.0149137099) + 0.0351840563676*np.cos(0.000131825955466*t+-2.16993251128) + 0.0344522250301*np.cos(0.000130597763334*t+-0.563291814368) + 0.0477203242754*np.cos(0.000131007160711*t+-2.52635806162) + 0.0382348091697*np.cos(0.000133054147597*t+1.08608637804) + 0.0414287360324*np.cos(0.000133463544974*t+-2.5733327546) + 0.0243174557182*np.cos(0.000132235352843*t+-2.19064009726) + 0.0505290610298*np.cos(0.00013264475022*t+-1.46750104105) + 0.0233212140747*np.cos(0.000133872942352*t+-2.55958096546) + 0.040713658542*np.cos(0.000134282339729*t+-2.05598370508) + 0.0121812498745*np.cos(8.14700780672e-05*t+-0.48020613776) + 0.00824898322386*np.cos(8.31076675761e-05*t+3.00737919402) + 0.0121718855903*np.cos(8.43358597078e-05*t+-2.83777593221) + 0.00928961639545*np.cos(8.39264623305e-05*t+2.85823004836) + 0.0145989744862*np.cos(8.51546544622e-05*t+-1.2358474323) + 0.0143842069642*np.cos(8.4745257085e-05*t+-2.62866826633) + 0.0162662773803*np.cos(3.11142006689e-05*t+-0.950361017907) + 0.0571370324327*np.cos(3.07048032917e-05*t+0.0142250739476) + 0.0295642024313*np.cos(3.02954059144e-05*t+-0.610766266446) + 0.0122246674378*np.cos(2.98860085372e-05*t+-1.61564597554) + 0.0876053027587*np.cos(2.947661116e-05*t+0.397674228709) + 0.0219376517134*np.cos(2.90672137828e-05*t+0.873560689432) + 0.00702482782424*np.cos(2.82484190283e-05*t+1.48415807469) + 0.0369652719656*np.cos(3.19329954233e-05*t+0.949642614637) + 0.0249579362302*np.cos(3.15235980461e-05*t+0.464883073809) + 0.143684861639*np.cos(4.09397377222e-07*t+-2.90401523267) + 0.0249856050637*np.cos(0.000426182669688*t+1.13211750111) + 0.014455478997*np.cos(0.000425773272311*t+1.10172934747) + 0.00901258745651*np.cos(0.00042741086182*t+-1.81470433975) + 0.0184872098048*np.cos(0.000427001464443*t+-1.68093033124) + 0.0197549907922*np.cos(0.000429048451329*t+-1.02173414509) + 0.00713393724576*np.cos(0.000428639053952*t+-2.35522478861) + 0.0132014276567*np.cos(0.000273477447984*t+1.0549772143) + 0.0086869900188*np.cos(0.000271430461098*t+2.86632847152) + 0.00829365372383*np.cos(0.000855640518394*t+-1.32719569027) + 0.00838773294687*np.cos(0.000282893587661*t+-0.0233306120605) + 0.012058820792*np.cos(0.000283302985038*t+0.125563377428) + 0.0199782230229*np.cos(0.000282074792906*t+0.729433771967) + 0.0109185656043*np.cos(0.000282484190283*t+-0.157706314032) + 0.0154150110704*np.cos(0.000284531177169*t+0.59959083435) + 0.0097177542809*np.cos(0.000284940574547*t+-0.0313515898162) + 0.0224101684698*np.cos(0.000283712382415*t+0.844310172512) + 0.00710287931508*np.cos(0.000284121779792*t+0.0979178055483) + 0.0186540000191*np.cos(0.000285349971924*t+0.603147628608) + 0.0436912355259*np.cos(0.000285759369301*t+-0.0700129291523) + 0.009628317715*np.cos(0.000221483981077*t+0.880882118994) + 0.0096171367746*np.cos(0.000222302775832*t+1.15443169305) + 0.179538012519*np.cos(2.86578164056e-06*t+-2.2621933474) + 0.0344409164279*np.cos(2.74296242739e-05*t+-1.95136476778) + 0.0172295442624*np.cos(0.000416766530012*t+-3.0776440649) + 0.0128547164606*np.cos(4.87182878894e-05*t+0.760899065674) + 0.00785475176517*np.cos(4.95370826439e-05*t+-3.02659043305) + 0.0401051788949*np.cos(4.99464800211e-05*t+-1.58524348713) + 0.0131477333804*np.cos(5.03558773983e-05*t+2.9933306174) + 0.0191649523888*np.cos(5.07652747755e-05*t+-1.26954975123) + 0.0110898018624*np.cos(5.11746721528e-05*t+-2.18939957725) + 0.0222942865505*np.cos(5.158406953e-05*t+-2.76137676183) + 0.0235107712558*np.cos(5.19934669072e-05*t+-1.17110111272) + 0.010442551227*np.cos(5.24028642844e-05*t+-2.15329945239) + 0.0150822874208*np.cos(0.00016949051417*t+0.96814130213) + 0.012263703871*np.cos(0.000169899911547*t+0.867318417863) + 0.0156934259923*np.cos(0.000170309308924*t+1.58206618263) + 0.00939681126201*np.cos(0.000168262322038*t+0.627299093471) + 0.0124877628444*np.cos(0.000168671719416*t+1.21714266652) + 0.0231735750183*np.cos(0.000567015367453*t+-2.02270043461) + 0.0121882350779*np.cos(0.000170718706302*t+1.68632878669) + 0.0068751832464*np.cos(0.000171128103679*t+1.97114829009) + 0.00991457559874*np.cos(0.000845405583964*t+1.04678463026) + 0.0451026033649*np.cos(0.000130188365957*t+-1.51205528702) + 0.0131429269116*np.cos(0.000129778968579*t+-1.69781947726) + 0.0176854468365*np.cos(0.000127731981693*t+-1.56826941765) + 0.0219386905455*np.cos(0.000127322584316*t+-1.77422170347) + 0.0138407468916*np.cos(0.000126913186939*t+-1.72472624252) + 0.0155155551433*np.cos(0.000126503789562*t+-1.44617246088) + 0.0254481385476*np.cos(0.000129369571202*t+-2.29913414801) + 0.0223597681907*np.cos(0.000128960173825*t+-2.52458963359) + 0.027616647853*np.cos(0.000128550776448*t+-2.08004728645) + 0.0104208384603*np.cos(0.000128141379071*t+2.0151150472) + 0.236621981093*np.cos(8.18794754444e-07*t+0.45556094238) + 0.0269204454016*np.cos(0.000421269901162*t+-1.57999136378) + 0.0491275238137*np.cos(0.000150248837441*t+0.301690000999) + 0.0329755825451*np.cos(0.000150658234818*t+1.67073466244) + 0.021834628373*np.cos(0.000149430042686*t+1.31581601281) + 0.0162302855321*np.cos(0.000149839440063*t+1.15747724859) + 0.0119237571084*np.cos(0.000148611247932*t+1.5562769234) + 0.0114083476478*np.cos(0.000149020645309*t+1.10992418839) + 0.042437972108*np.cos(0.000147792453177*t+0.980648625195) + 0.0170871795968*np.cos(0.000148201850554*t+-2.61600694652) + 0.0298016999038*np.cos(0.000146973658423*t+1.56033261818) + 0.021134306893*np.cos(0.0001473830558*t+2.16207275937) + 0.0124469249902*np.cos(0.000155161605967*t+0.431887813034) + 0.0194885343817*np.cos(0.000155571003344*t+1.2922271906) + 0.01328344841*np.cos(0.000155980400722*t+1.52875000098) + 0.0168168817858*np.cos(0.000156389798099*t+1.3512759184) + 0.0105308432923*np.cos(0.000156799195476*t+1.24225261082) + 0.0164196266437*np.cos(0.000157208592853*t+1.5060800999) + 0.00916100721217*np.cos(0.000157617990231*t+0.861155089585) + 0.00895122433087*np.cos(0.000158027387608*t+1.73391184102) + 0.0112824134235*np.cos(0.000158436784985*t+1.54340005995) + 0.0194989460687*np.cos(0.00070743866784*t+-1.28444927661) + 0.0100153379526*np.cos(0.000704982283577*t+1.15114085714) + 0.00981366181476*np.cos(0.000234175299771*t+2.0298787053) + 0.00965237905778*np.cos(0.000235403491903*t+2.12087050142) + 0.0078573054665*np.cos(0.000234584697148*t+1.74565718498) + 0.0185470381664*np.cos(2.41544452561e-05*t+-1.91076843456) + 0.0180790146829*np.cos(2.45638426333e-05*t+1.25967623421) + 0.00688674618473*np.cos(0.000105215125946*t+2.56117866504) + 0.0158789864384*np.cos(2.53826373878e-05*t+-0.453223288473) + 0.0308714632172*np.cos(2.5792034765e-05*t+-2.70207803701) + 0.0816396923661*np.cos(2.62014321422e-05*t+1.13135672821) + 0.0208925111504*np.cos(2.66108295194e-05*t+1.13747287054) + 0.0400110966147*np.cos(2.70202268967e-05*t+1.90919182906) + 0.0136485467989*np.cos(0.000102758741683*t+-1.7384717656) + 0.0369246455508*np.cos(2.78390216511e-05*t+1.30335516605) + 0.0127678880889*np.cos(0.000102349344306*t+-0.814980441118) + 0.01646343834*np.cos(0.000104805728569*t+0.157129935012) + 0.00711152134721*np.cos(0.000103577536437*t+-1.62939211137) + 0.00849715007157*np.cos(0.000424545080179*t+0.93756887426) + 0.0086677033231*np.cos(0.000424954477557*t+1.35072838449) + 0.0130666553256*np.cos(0.000207973867629*t+1.89874270137) + 0.0117092349152*np.cos(0.000206745675497*t+1.8892024389) + 0.00721436380375*np.cos(0.000422498093293*t+1.41089272043) + 0.0072673458158*np.cos(0.000205926880743*t+1.56808998139) + 0.0504471355958*np.cos(0.000421679298539*t+1.79710022689) + 0.00850963102086*np.cos(0.000205108085988*t+1.73928686098) + 0.00942532364124*np.cos(0.000424135682802*t+2.69571194481) + 0.0077547942823*np.cos(0.000422907490671*t+2.34723782415) + 0.00813593158437*np.cos(0.000204698688611*t+0.681210177252) + 0.00699910028707*np.cos(0.000257510950273*t+1.18547526691) + 0.0105030909283*np.cos(0.000191188575163*t+1.52646031002) + 0.00732680071667*np.cos(0.000189550985654*t+1.18211335472) + 0.0090452558937*np.cos(0.000188322793522*t+2.99755657621) + 0.01212229408*np.cos(0.000187913396145*t+1.47827552751) + 0.0117354254721*np.cos(6.83693619961e-05*t+-0.123737279743) + 0.0159733356021*np.cos(6.87787593733e-05*t+-1.19275668187) + 0.0116817037838*np.cos(6.67317724872e-05*t+-2.46432211114) + 0.0219774471147*np.cos(6.71411698644e-05*t+2.86028482476) + 0.0661666296742*np.cos(6.75505672417e-05*t+3.10877439971) + 0.0225548473516*np.cos(6.50941829783e-05*t+0.3094019539) + 0.0161713009841*np.cos(6.55035803555e-05*t+2.77108755529) + 0.0193899975236*np.cos(6.632237511e-05*t+3.09338905007) + 0.00689859915778*np.cos(3.27517901778e-06*t+0.303807837936) + 0.114737539735*np.cos(0.000145745466291*t+2.16446529223) + 0.427870246241*np.cos(0.000145336068914*t+0.140852374104) + 0.0941574959551*np.cos(0.000144926671537*t+0.497232058934) + 0.106544651397*np.cos(0.000144517274159*t+0.604005916826) + 0.0765701705959*np.cos(0.000144107876782*t+0.818733251289) + 0.108262317725*np.cos(0.000143698479405*t+0.778420031235) + 0.194757465503*np.cos(0.000143289082028*t+1.35695961397) + 0.150498223311*np.cos(0.000142879684651*t+-0.155687953241) + 0.0311146565162*np.cos(0.000146564261046*t+2.38882700435) + 0.0476844975928*np.cos(0.000146154863668*t+2.71048048163) + 0.00735918737671*np.cos(8.80204361028e-05*t+2.79086577426) + 0.0127095046219*np.cos(8.76110387255e-05*t+0.69390249889) + 0.0108396755507*np.cos(8.67922439711e-05*t+-0.971380771115) + 0.00793742558876*np.cos(8.59734492167e-05*t+-1.70311797854) + 0.00843423653553*np.cos(8.88392308572e-05*t+1.95700038323) + 0.0075292839484*np.cos(0.000117497047263*t+2.71839999015) + 0.113724315821*np.cos(1.22819213167e-06*t+-0.706669318397) + 0.0195165846423*np.cos(0.000114221868245*t+-2.43160933806) + 0.00788235199889*np.cos(0.000115450060377*t+-2.78386661333) + 0.0124097807425*np.cos(0.000115040662999*t+-1.34948078568) + 0.0133504384373*np.cos(0.000116268855131*t+-1.47214158027) + 0.0100787955605*np.cos(0.000115859457754*t+-1.3002466643) + 0.0112106983751*np.cos(0.000275933832248*t+-1.838834566) + 0.012247783541*np.cos(0.000276343229625*t+1.98775255794) + 0.0113727598666*np.cos(0.000273886845362*t+3.13105026453) + 0.0130433594607*np.cos(0.000106443318078*t+0.976886870631) + 0.00869044622813*np.cos(0.000106033920701*t+-0.968051303688) + 0.024783782615*np.cos(0.000108490304964*t+-2.09651018224) + 0.0170325510138*np.cos(0.000108080907587*t+0.677191614471) + 0.0200637363633*np.cos(0.000107671510209*t+-1.92724378453) + 0.0159386758782*np.cos(0.000109309099718*t+-1.4446811548) + 0.00843603526985*np.cos(2.37450478789e-05*t+-2.64422653112) + 0.057550730837*np.cos(2.33356505017e-05*t+2.89458022939) + 0.0296250616024*np.cos(2.210745837e-05*t+2.57058128588) + 0.0465863346076*np.cos(2.29262531244e-05*t+1.34781058057) + 0.00945659533492*np.cos(2.25168557472e-05*t+-2.42844737985) + 0.0341323869902*np.cos(2.04698688611e-05*t+2.56386530804) + 0.0505831162399*np.cos(2.00604714839e-05*t+-2.57570595599) + 0.0339882830015*np.cos(2.08792662383e-05*t+-2.60667427794) + 0.00824271673887*np.cos(0.000218618199437*t+2.56632624548) + 0.00737255809784*np.cos(0.000218208802059*t+1.96769636508) + 0.00717991566407*np.cos(0.000217799404682*t+3.12006537564) + 0.00899814709038*np.cos(0.000217390007305*t+1.15747812212) + 0.00863392554102*np.cos(0.000216980609928*t+2.50615249204) + 0.0111194704086*np.cos(4.66713010033e-05*t+0.514651319011) + 0.0249671276938*np.cos(4.62619036261e-05*t+-0.213669052112) + 0.0357613901157*np.cos(4.74900957578e-05*t+-1.3539064148) + 0.0180315699434*np.cos(4.70806983805e-05*t+-0.330625981487) + 0.0127486578752*np.cos(4.50337114944e-05*t+-2.79501513977) + 0.0318783908853*np.cos(4.46243141172e-05*t+2.77844970267) + 0.016499795069*np.cos(4.58525062489e-05*t+-0.6348717619) + 0.0159506369161*np.cos(4.54431088717e-05*t+-0.0354639554998) + 0.0284655492065*np.cos(4.83088905122e-05*t+-0.464662045931) + 0.0356969023568*np.cos(4.7899493135e-05*t+-0.547077344158) + 0.00761081386817*np.cos(0.000175222077451*t+0.87142598951) + 0.0128044094785*np.cos(0.000174812680074*t+1.17769024425) + 0.00782115313144*np.cos(0.000850727749868*t+2.91894938715) + 0.0128702422502*np.cos(0.000571928135979*t+0.427964873803) + 0.00734711972723*np.cos(0.000171537501056*t+1.85905343845) + 0.00854631533488*np.cos(0.000173175090565*t+-0.0707764121289) + 0.0109487226795*np.cos(0.000173993885319*t+0.938676555323) + 0.0132374502629*np.cos(0.000125684994807*t+-1.11760518659) + 0.0255293432195*np.cos(0.000126094392184*t+-2.24382796241) + 0.00777827708456*np.cos(0.000122409815789*t+-2.23529646953) + 0.0160128912357*np.cos(0.000122819213167*t+0.773526235642) + 0.012786774651*np.cos(0.000123228610544*t+-2.10458901665) + 0.0136897447519*np.cos(0.000123638007921*t+-1.80764608088) + 0.00988928538241*np.cos(0.000124047405298*t+-2.78532347666) + 0.0142087607899*np.cos(0.000124456802676*t+-1.66547343027) + 0.0165107403694*np.cos(0.000124866200053*t+-2.07238973359) + 0.0109026386372*np.cos(0.00012527559743*t+-1.03164554734) + 0.00892235391066*np.cos(0.00071030444948*t+2.94773628377) + 0.050120233286*np.cos(0.000426592067066*t+-2.09999880444) + 0.00780865738255*np.cos(0.000229262531244*t+2.07390821631) + 0.00701777902402*np.cos(0.000230900120753*t+2.96867396313) + 0.0124931264147*np.cos(0.000286578164056*t+2.74796861333) + 0.0157703112449*np.cos(0.000422088695916*t+1.65866694087) + 0.00839606752783*np.cos(9.33426020067e-05*t+0.610976676423) + 0.00939761022478*np.cos(9.25238072522e-05*t+0.488918014895) + 0.0184598174218*np.cos(9.2114409875e-05*t+-0.7078932254) + 0.00868496758844*np.cos(9.17050124978e-05*t+-1.59346461536) + 0.00803106930908*np.cos(9.12956151205e-05*t+-2.04765720191) + 0.0125583639381*np.cos(9.04768203661e-05*t+-1.4098390155) + 0.00834038496713*np.cos(9.00674229889e-05*t+-1.55856038795) + 0.0151075169532*np.cos(8.96580256117e-05*t+-2.95678348136) + 0.0220772475514*np.cos(0.000419222914276*t+-2.38533689076) + 0.0248414032076*np.cos(0.000418813516898*t+1.23919069374) + 0.0142602820487*np.cos(0.000423726285425*t+2.86906029011) + 0.010838102889*np.cos(0.000420860503784*t+-1.52209083679) + 0.0146600379525*np.cos(0.000159664977117*t+1.76897895836) + 0.0133330995544*np.cos(0.000159255579739*t+0.918302267833) + 0.00733700314427*np.cos(0.000423316888048*t+2.01778855493) + 0.0145525817837*np.cos(0.000712351436367*t+1.15159237157) + 0.00781039917884*np.cos(0.000247276015842*t+2.66262713127) + 0.0139995607854*np.cos(6.22284013378e-05*t+-1.97610909424) + 0.0168230569294*np.cos(6.18190039605e-05*t+-0.646140044194) + 0.0242565258092*np.cos(6.30471960922e-05*t+0.0562682246727) + 0.012062416717*np.cos(6.2637798715e-05*t+3.06672015556) + 0.00867891259435*np.cos(6.38659908467e-05*t+1.08466363593) + 0.00983080485692*np.cos(6.34565934694e-05*t+-1.05109106413) + 0.0173681187933*np.cos(6.42753882239e-05*t+-0.671336148652) + 0.0080842696453*np.cos(0.000248913605351*t+2.89030804918) + 0.0430260613697*np.cos(3.23423928006e-05*t+-1.72507271376) + 0.0221527581492*np.cos(1.92416767294e-05*t+-2.74769062692) + 0.0429071531223*np.cos(1.96510741067e-05*t+-0.587650991169) + 0.0108197197943*np.cos(1.8422881975e-05*t+-0.106926355876) + 0.0218389892513*np.cos(1.88322793522e-05*t+0.380408430898) + 0.010440271544*np.cos(1.80134845978e-05*t+1.59429109477) + 0.0414675090392*np.cos(1.67852924661e-05*t+0.749822370769) + 0.0548618238308*np.cos(1.71946898433e-05*t+-0.745845186597) + 0.0676682573054*np.cos(1.59664977117e-05*t+-0.0613650250883) + 0.0395180682059*np.cos(1.63758950889e-05*t+-2.60894883118) + 0.0466593535236*np.cos(1.63758950889e-06*t+-0.726864662606) + 0.00882332408778*np.cos(0.000199785920084*t+2.30330335976) + 0.00829265428271*np.cos(0.00019896712533*t+1.67306766741) + 0.00788964308811*np.cos(0.000198148330576*t+1.36148205283) + 0.00854919001087*np.cos(0.000194463754181*t+2.19445199328) + 0.00978227485117*np.cos(0.000193644959426*t+1.58071181217) + 0.00809845266687*np.cos(0.000559646214663*t+-2.32265447823))', 'visible': True, 'readonly': False, 'tip': 'This equation is generated after processing. You may copy it to buffer.\nIf you want to access parameters independently consider opening table that is stored in terminal `params`', 'removable': False, 'type': 'text'}), ('plot', {'expanded': True, 'name': 'plot', 'strictNaming': False, 'default': None, 'enabled': True, 'title': 'Display plot', 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'})])}, 'pos': (369.9141143428013, 96.32877835405412), 'bypass': False}, 'pos': (369.9141143428013, 96.32877835405412), 'class': 'FFT', 'name': u'FFT.0'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('Y:signal', {'expanded': True, 'name': 'Y:signal', 'limits': [u'GW_1', u'GW_2', u'GW_3', u'GW_4', u'GW_5', u'GW_6', u'Weser'], 'strictNaming': False, 'default': None, 'tip': 'Signal Data-Values (Y-axis)', 'title': None, 'renamable': False, 'value': u'GW_1', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('X:datetime', {'expanded': True, 'name': 'X:datetime', 'limits': [u'Datetime'], 'strictNaming': False, 'default': None, 'tip': 'Datetime Values (X-axis)', 'title': None, 'renamable': False, 'value': u'Datetime', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('tz correct', {'expanded': True, 'name': 'tz correct', 'strictNaming': False, 'default': 0, 'enabled': True, 'title': None, 'renamable': False, 'value': 0, 'visible': True, 'readonly': False, 'tip': '<float>\nONLY FOR CURVE!!!\nTimezone correction\nNumber of hours to add/substract from result. Due to missing\ntimezone settings it may be nessesary to use this parameter.\nCheck the results manually with *TimeseriesPlot* Node', 'removable': False, 'type': 'float', 'suffix': ' hours'}), ('color', {'expanded': True, 'name': 'color', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': (85, 0, 255, 255), 'visible': True, 'readonly': False, 'tip': 'Curve color', 'removable': False, 'type': 'color'}), ('Display Line', {'expanded': True, 'name': 'Display Line', 'strictNaming': False, 'default': True, 'enabled': True, 'title': None, 'renamable': False, 'value': True, 'visible': True, 'readonly': False, 'tip': 'display line-curve between data points', 'removable': False, 'type': 'bool', 'children': OrderedDict([('Style', {'expanded': True, 'name': 'Style', 'limits': {'solid': 1, 'dash': 2, 'dash-dot': 4, 'dash-dot-dot': 5, 'dot-dot': 3}, 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': 1, 'visible': True, 'readonly': False, 'tip': 'Style', 'values': {'solid': 1, 'dash': 2, 'dash-dot': 4, 'dash-dot-dot': 5, 'dot-dot': 3}, 'removable': False, 'type': 'list'}), ('Linewidth', {'expanded': True, 'name': 'Linewidth', 'limits': (0.0, 20.0), 'strictNaming': False, 'default': 1.0, 'enabled': True, 'title': None, 'renamable': False, 'readonly': False, 'value': 1.0, 'visible': True, 'step': 0.1, 'tip': 'Linewidth', 'removable': False, 'type': 'float'})])}), ('Display Data Points', {'expanded': True, 'name': 'Display Data Points', 'strictNaming': False, 'default': False, 'enabled': True, 'title': None, 'renamable': False, 'value': False, 'visible': True, 'readonly': False, 'tip': 'display data points as scatter', 'removable': False, 'type': 'bool', 'children': OrderedDict([('Symbol', {'expanded': True, 'name': 'Symbol', 'limits': {'square': 's', 'triangle': 't', 'diamond': 'd', 'star': 'star', 'circle': 'o', 'hexagon': 'h', 'pentagon': 'p', 'cross': '+'}, 'strictNaming': False, 'default': 'o', 'enabled': True, 'title': None, 'renamable': False, 'value': 'o', 'visible': True, 'readonly': False, 'tip': 'Symbol for data points', 'values': {'square': 's', 'triangle': 't', 'diamond': 'd', 'star': 'star', 'circle': 'o', 'hexagon': 'h', 'pentagon': 'p', 'cross': '+'}, 'removable': False, 'type': 'list'}), ('Size', {'expanded': True, 'name': 'Size', 'limits': (0, 1000), 'strictNaming': False, 'default': 5, 'enabled': True, 'title': None, 'renamable': False, 'value': 5, 'visible': True, 'readonly': False, 'tip': 'Symbol size', 'removable': False, 'type': 'int'})])})])}, 'pos': (368.6907676739749, 211.16025233460124), 'bypass': False}, 'pos': (368.6907676739749, 211.16025233460124), 'class': 'makeTimeseriesCurve', 'name': 'gw1_curve'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('Y:Label', {'expanded': True, 'name': 'Y:Label', 'strictNaming': False, 'default': 'Water level', 'enabled': True, 'title': None, 'renamable': False, 'value': 'Water level', 'visible': True, 'readonly': False, 'removable': False, 'type': 'str'}), ('Y:Units', {'expanded': True, 'name': 'Y:Units', 'strictNaming': False, 'default': 'm AMSL', 'enabled': True, 'title': None, 'renamable': False, 'value': 'm AMSL', 'visible': True, 'readonly': False, 'removable': False, 'type': 'str'}), ('Crosshair', {'expanded': True, 'name': 'Crosshair', 'strictNaming': False, 'default': False, 'enabled': True, 'title': None, 'renamable': False, 'value': True, 'visible': True, 'readonly': False, 'removable': False, 'type': 'bool'}), ('Legend', {'expanded': True, 'name': 'Legend', 'strictNaming': False, 'default': True, 'enabled': True, 'title': None, 'renamable': False, 'value': True, 'visible': False, 'readonly': False, 'removable': False, 'type': 'bool'}), ('Data Points', {'expanded': True, 'name': 'Data Points', 'strictNaming': False, 'default': False, 'enabled': True, 'title': None, 'renamable': False, 'value': False, 'visible': False, 'readonly': False, 'removable': False, 'type': 'bool'}), ('Plot', {'expanded': True, 'name': 'Plot', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'})])}, 'pos': (849.7106778566933, 203.08616432034404), 'bypass': False}, 'pos': (849.7106778566933, 203.08616432034404), 'class': 'TimeseriesPlot', 'name': u'TimeseriesPlot.0'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('Y:signal', {'expanded': True, 'name': 'Y:signal', 'limits': [u'GW_1', u'GW_2', u'GW_3', u'GW_4', u'GW_5', u'GW_6', u'Weser'], 'strictNaming': False, 'default': None, 'tip': 'Signal Data-Values (Y-axis)', 'title': None, 'renamable': False, 'value': u'Weser', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('X:datetime', {'expanded': True, 'name': 'X:datetime', 'limits': [u'Datetime'], 'strictNaming': False, 'default': None, 'tip': 'Datetime Values (X-axis)', 'title': None, 'renamable': False, 'value': u'Datetime', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('tz correct', {'expanded': True, 'name': 'tz correct', 'strictNaming': False, 'default': 0, 'enabled': True, 'title': None, 'renamable': False, 'value': 0, 'visible': True, 'readonly': False, 'tip': '<float>\nONLY FOR CURVE!!!\nTimezone correction\nNumber of hours to add/substract from result. Due to missing\ntimezone settings it may be nessesary to use this parameter.\nCheck the results manually with *TimeseriesPlot* Node', 'removable': False, 'type': 'float', 'suffix': ' hours'}), ('color', {'expanded': True, 'name': 'color', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': (85, 170, 0, 255), 'visible': True, 'readonly': False, 'tip': 'Curve color', 'removable': False, 'type': 'color'}), ('Display Line', {'expanded': True, 'name': 'Display Line', 'strictNaming': False, 'default': True, 'enabled': True, 'title': None, 'renamable': False, 'value': True, 'visible': True, 'readonly': False, 'tip': 'display line-curve between data points', 'removable': False, 'type': 'bool', 'children': OrderedDict([('Style', {'expanded': True, 'name': 'Style', 'limits': {'solid': 1, 'dash': 2, 'dash-dot': 4, 'dash-dot-dot': 5, 'dot-dot': 3}, 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': 1, 'visible': True, 'readonly': False, 'tip': 'Style', 'values': {'solid': 1, 'dash': 2, 'dash-dot': 4, 'dash-dot-dot': 5, 'dot-dot': 3}, 'removable': False, 'type': 'list'}), ('Linewidth', {'expanded': True, 'name': 'Linewidth', 'limits': (0.0, 20.0), 'strictNaming': False, 'default': 1.0, 'enabled': True, 'title': None, 'renamable': False, 'readonly': False, 'value': 1.0, 'visible': True, 'step': 0.1, 'tip': 'Linewidth', 'removable': False, 'type': 'float'})])}), ('Display Data Points', {'expanded': True, 'name': 'Display Data Points', 'strictNaming': False, 'default': False, 'enabled': True, 'title': None, 'renamable': False, 'value': False, 'visible': True, 'readonly': False, 'tip': 'display data points as scatter', 'removable': False, 'type': 'bool', 'children': OrderedDict([('Symbol', {'expanded': True, 'name': 'Symbol', 'limits': {'square': 's', 'triangle': 't', 'diamond': 'd', 'star': 'star', 'circle': 'o', 'hexagon': 'h', 'pentagon': 'p', 'cross': '+'}, 'strictNaming': False, 'default': 'o', 'enabled': True, 'title': None, 'renamable': False, 'value': 'o', 'visible': True, 'readonly': False, 'tip': 'Symbol for data points', 'values': {'square': 's', 'triangle': 't', 'diamond': 'd', 'star': 'star', 'circle': 'o', 'hexagon': 'h', 'pentagon': 'p', 'cross': '+'}, 'removable': False, 'type': 'list'}), ('Size', {'expanded': True, 'name': 'Size', 'limits': (0, 1000), 'strictNaming': False, 'default': 5, 'enabled': True, 'title': None, 'renamable': False, 'value': 5, 'visible': True, 'readonly': False, 'tip': 'Symbol size', 'removable': False, 'type': 'int'})])})])}, 'pos': (369.98664596811227, 329.0496175854049), 'bypass': False}, 'pos': (369.98664596811227, 329.0496175854049), 'class': 'makeTimeseriesCurve', 'name': 'w_crve'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('Y:signal', {'expanded': True, 'name': 'Y:signal', 'limits': [u'Generated GW1'], 'strictNaming': False, 'default': None, 'tip': 'Signal Data-Values (Y-axis)', 'title': None, 'renamable': False, 'value': u'Generated GW1', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('X:datetime', {'expanded': True, 'name': 'X:datetime', 'limits': [u'Datetime'], 'strictNaming': False, 'default': None, 'tip': 'Datetime Values (X-axis)', 'title': None, 'renamable': False, 'value': u'Datetime', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('tz correct', {'expanded': True, 'name': 'tz correct', 'strictNaming': False, 'default': 0, 'enabled': True, 'title': None, 'renamable': False, 'value': 0, 'visible': True, 'readonly': False, 'tip': '<float>\nONLY FOR CURVE!!!\nTimezone correction\nNumber of hours to add/substract from result. Due to missing\ntimezone settings it may be nessesary to use this parameter.\nCheck the results manually with *TimeseriesPlot* Node', 'removable': False, 'type': 'float', 'suffix': ' hours'}), ('color', {'expanded': True, 'name': 'color', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': (255, 85, 255, 255), 'visible': True, 'readonly': False, 'tip': 'Curve color', 'removable': False, 'type': 'color'}), ('Display Line', {'expanded': True, 'name': 'Display Line', 'strictNaming': False, 'default': True, 'enabled': True, 'title': None, 'renamable': False, 'value': True, 'visible': True, 'readonly': False, 'tip': 'display line-curve between data points', 'removable': False, 'type': 'bool', 'children': OrderedDict([('Style', {'expanded': True, 'name': 'Style', 'limits': {'solid': 1, 'dash': 2, 'dash-dot': 4, 'dash-dot-dot': 5, 'dot-dot': 3}, 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': 1, 'visible': True, 'readonly': False, 'tip': 'Style', 'values': {'solid': 1, 'dash': 2, 'dash-dot': 4, 'dash-dot-dot': 5, 'dot-dot': 3}, 'removable': False, 'type': 'list'}), ('Linewidth', {'expanded': True, 'name': 'Linewidth', 'limits': (0.0, 20.0), 'strictNaming': False, 'default': 1.0, 'enabled': True, 'title': None, 'renamable': False, 'readonly': False, 'value': 1.0, 'visible': True, 'step': 0.1, 'tip': 'Linewidth', 'removable': False, 'type': 'float'})])}), ('Display Data Points', {'expanded': True, 'name': 'Display Data Points', 'strictNaming': False, 'default': False, 'enabled': True, 'title': None, 'renamable': False, 'value': False, 'visible': True, 'readonly': False, 'tip': 'display data points as scatter', 'removable': False, 'type': 'bool', 'children': OrderedDict([('Symbol', {'expanded': True, 'name': 'Symbol', 'limits': {'square': 's', 'triangle': 't', 'diamond': 'd', 'star': 'star', 'circle': 'o', 'hexagon': 'h', 'pentagon': 'p', 'cross': '+'}, 'strictNaming': False, 'default': 'o', 'enabled': True, 'title': None, 'renamable': False, 'value': 'o', 'visible': True, 'readonly': False, 'tip': 'Symbol for data points', 'values': {'square': 's', 'triangle': 't', 'diamond': 'd', 'star': 'star', 'circle': 'o', 'hexagon': 'h', 'pentagon': 'p', 'cross': '+'}, 'removable': False, 'type': 'list'}), ('Size', {'expanded': True, 'name': 'Size', 'limits': (0, 1000), 'strictNaming': False, 'default': 5, 'enabled': True, 'title': None, 'renamable': False, 'value': 5, 'visible': True, 'readonly': False, 'tip': 'Symbol size', 'removable': False, 'type': 'int'})])})])}, 'pos': (631.1266347510759, 90.68861206889818), 'bypass': False}, 'pos': (631.1266347510759, 90.68861206889818), 'class': 'makeTimeseriesCurve', 'name': 'gw1_gen'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('river', {'expanded': True, 'name': 'river', 'limits': [u'GW_1', u'GW_2', u'GW_3', u'GW_4', u'GW_5', u'GW_6', u'Weser'], 'strictNaming': False, 'default': None, 'tip': 'Column name with RIVER hydrograph data', 'title': None, 'renamable': False, 'value': u'Weser', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('gw', {'expanded': True, 'name': 'gw', 'limits': [u'GW_1', u'GW_2', u'GW_3', u'GW_4', u'GW_5', u'GW_6', u'Weser'], 'strictNaming': False, 'default': None, 'tip': 'Column name with GROUNDWATER hydrograph data', 'title': None, 'renamable': False, 'value': u'GW_1', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('datetime', {'expanded': True, 'name': 'datetime', 'limits': [u'Datetime'], 'strictNaming': False, 'default': None, 'tip': 'Location of the datetime objects.', 'title': None, 'renamable': False, 'value': u'Datetime', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('method', {'expanded': True, 'name': 'method', 'limits': ['1) STD', '2) Cyclic amplitude', '3) Cyclic STD'], 'strictNaming': False, 'default': '1) STD', 'tip': 'Method to calculate Tidal Efficiency. Read docs', 'title': None, 'renamable': False, 'value': '1) STD', 'visible': True, 'readonly': False, 'values': ['1) STD', '2) Cyclic amplitude', '3) Cyclic STD'], 'removable': False, 'type': 'list', 'enabled': True}), ('E = ', {'expanded': True, 'name': 'E = ', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': '0.3029', 'visible': True, 'readonly': True, 'removable': False, 'type': 'str'})])}, 'pos': (-21.842378481516732, -67.68594954114322), 'bypass': False}, 'pos': (-21.842378481516732, -67.68594954114322), 'class': 'tidalEfficiency', 'name': u'tidalEfficiency.0'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('eq', {'expanded': True, 'name': 'eq', 'strictNaming': False, 'default': 'a = a + b + c', 'enabled': True, 'title': 'Equation', 'renamable': False, 'value': 'a = a + b + c', 'visible': True, 'readonly': True, 'removable': False, 'type': 'str'}), ('a', {'expanded': True, 'name': 'a', 'limits': [u'Generated GW1', u'Weser'], 'strictNaming': False, 'default': None, 'enabled': True, 'title': 'a', 'renamable': False, 'value': u'Generated GW1', 'visible': True, 'readonly': False, 'tip': 'Name of the column in A-terminal to which data will be added', 'values': [None], 'removable': False, 'type': 'list'}), ('b', {'expanded': True, 'name': 'b', 'limits': [' ', u'Generated GW1', u'Weser'], 'strictNaming': False, 'default': None, 'enabled': True, 'title': 'b', 'renamable': False, 'value': u'Weser', 'visible': True, 'readonly': False, 'tip': 'Name of the column in B-terminal', 'values': [None], 'removable': False, 'type': 'list'}), ('c', {'expanded': True, 'name': 'c', 'strictNaming': False, 'default': 0.0, 'enabled': True, 'title': 'c', 'renamable': False, 'value': 1.0, 'visible': True, 'readonly': False, 'tip': 'Constant to add to all rows in A', 'removable': False, 'type': 'float'})])}, 'pos': (680.6029508043051, -58.401507126093165), 'bypass': False}, 'pos': (680.6029508043051, -58.401507126093165), 'class': 'Add', 'name': u'Add.0'}]
outputNode:
    terminals:
        dataOut:
            multi: False
            io: 'in'
            renamable: False
            multiable: False
            removable: False
            optional: False
    pos: (300.0, 0.0)
    bypass: False
