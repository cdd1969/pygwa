pos: (0.0, 0.0)
connects: [('Well data', 'output', u'Make Curve.0', 'df'), ('Well data', 'output', u'Quick View.0', 'In'), ('Well data', 'output', u'Make Curve.1', 'df'), (u'Make Curve.0', 'Curve', u'Plot Curves.0', 'Curves'), ('Well data', 'output', u'Make Curve.2', 'df'), (u'Make Curve.1', 'Curve', u'Plot Curves.0', 'Curves'), (u'Make Curve.2', 'Curve', u'Plot Curves.0', 'Curves')]
terminals:
    dataOut:
        multi: False
        io: 'out'
        renamable: False
        multiable: False
        removable: False
        optional: False
    dataIn:
        multi: False
        io: 'in'
        renamable: False
        multiable: False
        removable: False
        optional: False
bypass: False
inputNode:
    terminals:
        dataIn:
            multi: False
            io: 'out'
            renamable: False
            multiable: False
            removable: False
            optional: False
    pos: (-150.0, 0.0)
    bypass: False
nodes: [{'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('Y:signal', {'expanded': True, 'name': 'Y:signal', 'limits': [u'Well_1', u'Well_2', u'Well_3', u'River'], 'strictNaming': False, 'default': None, 'tip': 'Signal Data-Values (Y-axis)', 'title': None, 'renamable': False, 'value': u'River', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('X:datetime', {'expanded': True, 'name': 'X:datetime', 'limits': [u'Datetime'], 'strictNaming': False, 'default': None, 'tip': 'Datetime Values (X-axis)', 'title': None, 'renamable': False, 'value': u'Datetime', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('tz correct', {'expanded': True, 'name': 'tz correct', 'strictNaming': False, 'default': 0, 'enabled': True, 'title': None, 'renamable': False, 'value': 0, 'visible': True, 'readonly': False, 'tip': '<float>\nONLY FOR CURVE!!!\nTimezone correction\nNumber of hours to add/substract from result. Due to missing\ntimezone settings it may be nessesary to use this parameter.\nCheck the results manually with *TimeseriesPlot* Node', 'removable': False, 'type': 'float', 'suffix': ' hours'}), ('color', {'expanded': True, 'name': 'color', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': (9, 12, 212, 255), 'visible': True, 'readonly': False, 'tip': 'Curve color', 'removable': False, 'type': 'color'}), ('Display Line', {'expanded': True, 'name': 'Display Line', 'strictNaming': False, 'default': True, 'enabled': True, 'title': None, 'renamable': False, 'value': True, 'visible': True, 'readonly': False, 'tip': 'display line-curve between data points', 'removable': False, 'type': 'bool', 'children': OrderedDict([('Style', {'expanded': True, 'name': 'Style', 'limits': {'solid': 1, 'dash': 2, 'dash-dot': 4, 'dash-dot-dot': 5, 'dot-dot': 3}, 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': 1, 'visible': True, 'readonly': False, 'tip': 'Style', 'values': {'solid': 1, 'dash': 2, 'dash-dot': 4, 'dash-dot-dot': 5, 'dot-dot': 3}, 'removable': False, 'type': 'list'}), ('Linewidth', {'expanded': True, 'name': 'Linewidth', 'limits': (0.0, 20.0), 'strictNaming': False, 'default': 1.0, 'enabled': True, 'title': None, 'renamable': False, 'readonly': False, 'value': 1.0, 'visible': True, 'step': 0.1, 'tip': 'Linewidth', 'removable': False, 'type': 'float'})])}), ('Display Data Points', {'expanded': True, 'name': 'Display Data Points', 'strictNaming': False, 'default': False, 'enabled': True, 'title': None, 'renamable': False, 'value': True, 'visible': True, 'readonly': False, 'tip': 'display data points as scatter', 'removable': False, 'type': 'bool', 'children': OrderedDict([('Symbol', {'expanded': True, 'name': 'Symbol', 'limits': {'square': 's', 'triangle': 't', 'diamond': 'd', 'star': 'star', 'circle': 'o', 'hexagon': 'h', 'pentagon': 'p', 'cross': '+'}, 'strictNaming': False, 'default': 'o', 'enabled': True, 'title': None, 'renamable': False, 'value': 't', 'visible': True, 'readonly': False, 'tip': 'Symbol for data points', 'values': {'square': 's', 'triangle': 't', 'diamond': 'd', 'star': 'star', 'circle': 'o', 'hexagon': 'h', 'pentagon': 'p', 'cross': '+'}, 'removable': False, 'type': 'list'}), ('Size', {'expanded': True, 'name': 'Size', 'limits': (0, 1000), 'strictNaming': False, 'default': 5, 'enabled': True, 'title': None, 'renamable': False, 'value': 5, 'visible': True, 'readonly': False, 'tip': 'Symbol size', 'removable': False, 'type': 'int'})])})])}, 'pos': (183.717261158724, 405.8076487857008), 'bypass': False}, 'pos': (183.717261158724, 405.8076487857008), 'class': 'Make Curve', 'name': u'Make Curve.1'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('Y:signal', {'expanded': True, 'name': 'Y:signal', 'limits': [u'Well_1', u'Well_2', u'Well_3', u'River'], 'strictNaming': False, 'default': None, 'tip': 'Signal Data-Values (Y-axis)', 'title': None, 'renamable': False, 'value': u'Well_1', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('X:datetime', {'expanded': True, 'name': 'X:datetime', 'limits': [u'Datetime'], 'strictNaming': False, 'default': None, 'tip': 'Datetime Values (X-axis)', 'title': None, 'renamable': False, 'value': u'Datetime', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('tz correct', {'expanded': True, 'name': 'tz correct', 'strictNaming': False, 'default': 0, 'enabled': True, 'title': None, 'renamable': False, 'value': 0, 'visible': True, 'readonly': False, 'tip': '<float>\nONLY FOR CURVE!!!\nTimezone correction\nNumber of hours to add/substract from result. Due to missing\ntimezone settings it may be nessesary to use this parameter.\nCheck the results manually with *TimeseriesPlot* Node', 'removable': False, 'type': 'float', 'suffix': ' hours'}), ('color', {'expanded': True, 'name': 'color', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': (240, 240, 24, 255), 'visible': True, 'readonly': False, 'tip': 'Curve color', 'removable': False, 'type': 'color'}), ('Display Line', {'expanded': True, 'name': 'Display Line', 'strictNaming': False, 'default': True, 'enabled': True, 'title': None, 'renamable': False, 'value': True, 'visible': True, 'readonly': False, 'tip': 'display line-curve between data points', 'removable': False, 'type': 'bool', 'children': OrderedDict([('Style', {'expanded': True, 'name': 'Style', 'limits': {'solid': 1, 'dash': 2, 'dash-dot': 4, 'dash-dot-dot': 5, 'dot-dot': 3}, 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': 2, 'visible': True, 'readonly': False, 'tip': 'Style', 'values': {'solid': 1, 'dash': 2, 'dash-dot': 4, 'dash-dot-dot': 5, 'dot-dot': 3}, 'removable': False, 'type': 'list'}), ('Linewidth', {'expanded': True, 'name': 'Linewidth', 'limits': (0.0, 20.0), 'strictNaming': False, 'default': 1.0, 'enabled': True, 'title': None, 'renamable': False, 'readonly': False, 'value': 2.0, 'visible': True, 'step': 0.1, 'tip': 'Linewidth', 'removable': False, 'type': 'float'})])}), ('Display Data Points', {'expanded': True, 'name': 'Display Data Points', 'strictNaming': False, 'default': False, 'enabled': True, 'title': None, 'renamable': False, 'value': False, 'visible': True, 'readonly': False, 'tip': 'display data points as scatter', 'removable': False, 'type': 'bool', 'children': OrderedDict([('Symbol', {'expanded': True, 'name': 'Symbol', 'limits': {'square': 's', 'triangle': 't', 'diamond': 'd', 'star': 'star', 'circle': 'o', 'hexagon': 'h', 'pentagon': 'p', 'cross': '+'}, 'strictNaming': False, 'default': 'o', 'enabled': True, 'title': None, 'renamable': False, 'value': 'o', 'visible': True, 'readonly': False, 'tip': 'Symbol for data points', 'values': {'square': 's', 'triangle': 't', 'diamond': 'd', 'star': 'star', 'circle': 'o', 'hexagon': 'h', 'pentagon': 'p', 'cross': '+'}, 'removable': False, 'type': 'list'}), ('Size', {'expanded': True, 'name': 'Size', 'limits': (0, 1000), 'strictNaming': False, 'default': 5, 'enabled': True, 'title': None, 'renamable': False, 'value': 5, 'visible': True, 'readonly': False, 'tip': 'Symbol size', 'removable': False, 'type': 'int'})])})])}, 'pos': (186.94726100113766, 289.52765445881175), 'bypass': False}, 'pos': (186.94726100113766, 289.52765445881175), 'class': 'Make Curve', 'name': u'Make Curve.0'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('Y:signal', {'expanded': True, 'name': 'Y:signal', 'limits': [u'Well_1', u'Well_2', u'Well_3', u'River'], 'strictNaming': False, 'default': None, 'tip': 'Signal Data-Values (Y-axis)', 'title': None, 'renamable': False, 'value': u'Well_2', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('X:datetime', {'expanded': True, 'name': 'X:datetime', 'limits': [u'Datetime'], 'strictNaming': False, 'default': None, 'tip': 'Datetime Values (X-axis)', 'title': None, 'renamable': False, 'value': u'Datetime', 'visible': True, 'readonly': False, 'values': [None], 'removable': False, 'type': 'list', 'enabled': True}), ('tz correct', {'expanded': True, 'name': 'tz correct', 'strictNaming': False, 'default': 0, 'enabled': True, 'title': None, 'renamable': False, 'value': 0, 'visible': True, 'readonly': False, 'tip': '<float>\nONLY FOR CURVE!!!\nTimezone correction\nNumber of hours to add/substract from result. Due to missing\ntimezone settings it may be nessesary to use this parameter.\nCheck the results manually with *TimeseriesPlot* Node', 'removable': False, 'type': 'float', 'suffix': ' hours'}), ('color', {'expanded': True, 'name': 'color', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': (96, 222, 74, 255), 'visible': True, 'readonly': False, 'tip': 'Curve color', 'removable': False, 'type': 'color'}), ('Display Line', {'expanded': True, 'name': 'Display Line', 'strictNaming': False, 'default': True, 'enabled': True, 'title': None, 'renamable': False, 'value': True, 'visible': True, 'readonly': False, 'tip': 'display line-curve between data points', 'removable': False, 'type': 'bool', 'children': OrderedDict([('Style', {'expanded': True, 'name': 'Style', 'limits': {'solid': 1, 'dash': 2, 'dash-dot': 4, 'dash-dot-dot': 5, 'dot-dot': 3}, 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': 5, 'visible': True, 'readonly': False, 'tip': 'Style', 'values': {'solid': 1, 'dash': 2, 'dash-dot': 4, 'dash-dot-dot': 5, 'dot-dot': 3}, 'removable': False, 'type': 'list'}), ('Linewidth', {'expanded': True, 'name': 'Linewidth', 'limits': (0.0, 20.0), 'strictNaming': False, 'default': 1.0, 'enabled': True, 'title': None, 'renamable': False, 'readonly': False, 'value': 1.8, 'visible': True, 'step': 0.1, 'tip': 'Linewidth', 'removable': False, 'type': 'float'})])}), ('Display Data Points', {'expanded': True, 'name': 'Display Data Points', 'strictNaming': False, 'default': False, 'enabled': True, 'title': None, 'renamable': False, 'value': False, 'visible': True, 'readonly': False, 'tip': 'display data points as scatter', 'removable': False, 'type': 'bool', 'children': OrderedDict([('Symbol', {'expanded': True, 'name': 'Symbol', 'limits': {'square': 's', 'triangle': 't', 'diamond': 'd', 'star': 'star', 'circle': 'o', 'hexagon': 'h', 'pentagon': 'p', 'cross': '+'}, 'strictNaming': False, 'default': 'o', 'enabled': True, 'title': None, 'renamable': False, 'value': '+', 'visible': True, 'readonly': False, 'tip': 'Symbol for data points', 'values': {'square': 's', 'triangle': 't', 'diamond': 'd', 'star': 'star', 'circle': 'o', 'hexagon': 'h', 'pentagon': 'p', 'cross': '+'}, 'removable': False, 'type': 'list'}), ('Size', {'expanded': True, 'name': 'Size', 'limits': (0, 1000), 'strictNaming': False, 'default': 5, 'enabled': True, 'title': None, 'renamable': False, 'value': 10, 'visible': True, 'readonly': False, 'tip': 'Symbol size', 'removable': False, 'type': 'int'})])})])}, 'pos': (181.2947612769139, 520.4726431913841), 'bypass': False}, 'pos': (181.2947612769139, 520.4726431913841), 'class': 'Make Curve', 'name': u'Make Curve.2'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('Y:Label', {'expanded': True, 'name': 'Y:Label', 'strictNaming': False, 'default': 'Water level', 'enabled': True, 'title': None, 'renamable': False, 'value': 'Water level', 'visible': True, 'readonly': False, 'removable': False, 'type': 'str'}), ('Y:Units', {'expanded': True, 'name': 'Y:Units', 'strictNaming': False, 'default': 'm AMSL', 'enabled': True, 'title': None, 'renamable': False, 'value': 'm AMSL', 'visible': True, 'readonly': False, 'removable': False, 'type': 'str'}), ('Crosshair', {'expanded': True, 'name': 'Crosshair', 'strictNaming': False, 'default': False, 'enabled': True, 'title': None, 'renamable': False, 'value': False, 'visible': True, 'readonly': False, 'removable': False, 'type': 'bool'}), ('Legend', {'expanded': True, 'name': 'Legend', 'strictNaming': False, 'default': True, 'enabled': True, 'title': None, 'renamable': False, 'value': True, 'visible': False, 'readonly': False, 'removable': False, 'type': 'bool'}), ('Data Points', {'expanded': True, 'name': 'Data Points', 'strictNaming': False, 'default': False, 'enabled': True, 'title': None, 'renamable': False, 'value': False, 'visible': False, 'readonly': False, 'removable': False, 'type': 'bool'}), ('Plot', {'expanded': True, 'name': 'Plot', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'})])}, 'pos': (433.2347489851739, 407.4226487069083), 'bypass': False}, 'pos': (433.2347489851739, 407.4226487069083), 'class': 'Plot Curves', 'name': u'Plot Curves.0'}, {'state': {'crtlWidget': {'expanded': True, 'name': 'params', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('Select File', {'expanded': True, 'name': 'Select File', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'examples/data/test_data.xlsx', 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'}), ('Parameters', {'expanded': True, 'name': 'Parameters', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'group', 'children': OrderedDict([('sheetname', {'expanded': True, 'name': 'sheetname', 'strictNaming': False, 'default': 0, 'enabled': True, 'title': None, 'renamable': False, 'value': 0, 'visible': True, 'readonly': False, 'tip': '<string, int, mixed list of strings/ints, or None, default 0>\nStrings are used for sheet names, Integers are used in zero-indexed sheet positions.\nLists of strings/integers are used to request multiple sheets.\nSpecify `None` to get all sheets.\nstr|int -> DataFrame is returned. list|None -> Dict of DataFrames is returned, with \nkeys representing sheets.\nAvailable Cases\n - Defaults to 0 -> 1st sheet as a DataFrame\n - 1 -> 2nd sheet as a DataFrame\n - "Sheet1" -> 1st sheet as a DataFrame\n - [0,1,"Sheet5"] -> 1st, 2nd & 5th sheet as a dictionary of DataFrames\n - None -> All sheets as a dictionary of DataFrames', 'removable': False, 'type': 'str'}), ('header', {'expanded': True, 'name': 'header', 'strictNaming': False, 'default': 0, 'enabled': True, 'title': None, 'renamable': False, 'value': 0, 'visible': True, 'readonly': False, 'tip': '<int, list of ints, default 0>\nRow (0-indexed) to use for the column labels of the parsed DataFrame. If a list of \nintegers is passed those row positions will be combined into a MultiIndex', 'removable': False, 'type': 'str'}), ('skiprows', {'expanded': True, 'name': 'skiprows', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': '<list-like or integer, default None>\nRows to skip at the beginning (0-indexed)', 'removable': False, 'type': 'str'}), ('skip_footer', {'expanded': True, 'name': 'skip_footer', 'strictNaming': False, 'default': 0, 'enabled': True, 'title': None, 'renamable': False, 'value': 0, 'visible': True, 'readonly': False, 'tip': '< int, default 0>\nRows at the end to skip (0-indexed)', 'removable': False, 'type': 'str'}), ('index_col', {'expanded': True, 'name': 'index_col', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': '<int, list of ints, default None>\nColumn (0-indexed) to use as the row labels of the DataFrame. Pass None if there is \nno such column. If a list is passed, those columns will be combined into a\nMultiIndex', 'removable': False, 'type': 'str'}), ('converters', {'expanded': False, 'name': 'converters', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': '', 'visible': True, 'readonly': False, 'tip': '<dict, default None>\nDict of functions for converting values in certain columns. Keys can either be \nintegers or column labels, values are functions that take one input argument, the \nExcel cell content, and return the transformed content.', 'removable': False, 'type': 'text'}), ('parse_cols', {'expanded': True, 'name': 'parse_cols', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': '< int or list, default None>\n - If None then parse all columns,\n - If int then indicates last column to be parsed\n - If list of ints then indicates list of column numbers to be parsed\n - If string then indicates comma separated list of column names and column ranges \n   (e.g. \xe2\x80\x9cA:E\xe2\x80\x9d or \xe2\x80\x9cA,C,E:F\xe2\x80\x9d)', 'removable': False, 'type': 'str'}), ('na_values', {'expanded': True, 'name': 'na_values', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': '< list-like, default None>\n List of additional strings to recognize as NA/NaN', 'removable': False, 'type': 'str'}), ('keep_default_na', {'expanded': True, 'name': 'keep_default_na', 'strictNaming': False, 'default': True, 'enabled': True, 'title': None, 'renamable': False, 'value': True, 'visible': True, 'readonly': False, 'tip': '<bool, default True>\nIf na_values are specified and keep_default_na is False the default NaN values are \noverridden, otherwise they\xe2\x80\x99re appended to', 'removable': False, 'type': 'bool'}), ('thousands', {'expanded': True, 'name': 'thousands', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': u'', 'visible': True, 'readonly': False, 'tip': '<str, default None>\nThousands separator for parsing string columns to numeric. Note that this parameter \nis only necessary for columns stored as TEXT in Excel, any numeric columns will \nautomatically be parsed, regardless of display format.', 'removable': False, 'type': 'str'}), ('Additional parameters', {'expanded': False, 'name': 'Additional parameters', 'strictNaming': False, 'default': '#Pass here manually params. For Example:\n#{"verbose": False, "engine": None, "convert_float": True}\n{}', 'enabled': True, 'title': None, 'renamable': False, 'value': '#Pass here manually params. For Example:\n#{"verbose": False, "engine": None, "convert_float": True}\n{}', 'visible': True, 'readonly': False, 'removable': False, 'type': 'text'})])}), ('Load File', {'expanded': True, 'name': 'Load File', 'strictNaming': False, 'default': None, 'enabled': True, 'title': None, 'renamable': False, 'value': None, 'visible': True, 'readonly': False, 'removable': False, 'type': 'action'})])}, 'pos': (-47.86352590814944, 287.7252669996842), 'bypass': False}, 'pos': (-47.86352590814944, 287.7252669996842), 'class': 'Read XLS', 'name': 'Well data'}, {'state': {'pos': (107.16985844415166, 123.9607443575735), 'bypass': False}, 'pos': (107.16985844415166, 123.9607443575735), 'class': 'Quick View', 'name': u'Quick View.0'}]
outputNode:
    terminals:
        dataOut:
            multi: False
            io: 'in'
            renamable: False
            multiable: False
            removable: False
            optional: False
    pos: (300.0, 0.0)
    bypass: False
